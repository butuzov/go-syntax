>// SYNTAX TEST "source.go" "Semantic Tokens Test"
#^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>
>package main
#^^^^^^^ source.go keyword.package.go
#       ^ source.go
#        ^^^^ source.go entity.name.type.package.go
>
>import (
#^^^^^^ source.go keyword.control.import.go
#      ^ source.go
#       ^ source.go punctuation.definition.imports.begin.bracket.round.go
>	"context"
#^ source.go
# ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#  ^^^^^^^ source.go string.quoted.double.go entity.name.import.go
#         ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	"fmt"
#^ source.go
# ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#  ^^^ source.go string.quoted.double.go entity.name.import.go
#     ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	"io"
#^ source.go
# ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#  ^^ source.go string.quoted.double.go entity.name.import.go
#    ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	"log"
#^ source.go
# ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#  ^^^ source.go string.quoted.double.go entity.name.import.go
#     ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	"net/http"
#^ source.go
# ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#  ^^^^^^^^ source.go string.quoted.double.go entity.name.import.go
#          ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	"sync"
#^ source.go
# ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#  ^^^^ source.go string.quoted.double.go entity.name.import.go
#      ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	"sync/atomic"
#^ source.go
# ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#  ^^^^^^^^^^^ source.go string.quoted.double.go entity.name.import.go
#             ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	"time"
#^ source.go
# ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#  ^^^^ source.go string.quoted.double.go entity.name.import.go
#      ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>)
#^ source.go punctuation.definition.imports.end.bracket.round.go
>
>// functions
#^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#  ^^^^^^^^^^ source.go comment.line.double-slash.go
>
>func Foo(foo string) FooX
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^ source.go entity.name.function.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^^^ source.go variable.other.go
#            ^ source.go
#             ^^^^^^ source.go storage.type.string.go
#                   ^ source.go punctuation.definition.end.bracket.round.go
#                    ^ source.go
#                     ^^^^ source.go entity.name.type.go
>
>func Fo0o(foo string) *[]FooX
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^ source.go variable.other.go
#             ^ source.go
#              ^^^^^^ source.go storage.type.string.go
#                    ^ source.go punctuation.definition.end.bracket.round.go
#                     ^ source.go
#                      ^ source.go keyword.operator.arithmetic.go
#                       ^ source.go punctuation.definition.begin.bracket.square.go
#                        ^ source.go punctuation.definition.end.bracket.square.go
#                         ^^^^ source.go entity.name.type.go
>
>func (m *FooX) Foo(foo string) FooX
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^ source.go variable.other.go
#        ^ source.go keyword.operator.address.go
#         ^^^^ source.go entity.name.type.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^^^ source.go entity.name.function.go
#                  ^ source.go punctuation.definition.begin.bracket.round.go
#                   ^^^ source.go variable.other.go
#                      ^ source.go
#                       ^^^^^^ source.go storage.type.string.go
#                             ^ source.go punctuation.definition.end.bracket.round.go
#                              ^ source.go
#                               ^^^^ source.go entity.name.type.go
>
>func (m *FooX) Bar(bar any) func()
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^ source.go variable.other.go
#        ^ source.go keyword.operator.address.go
#         ^^^^ source.go entity.name.type.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^^^ source.go entity.name.function.go
#                  ^ source.go punctuation.definition.begin.bracket.round.go
#                   ^^^ source.go variable.other.go
#                      ^ source.go
#                       ^^^ source.go entity.name.type.any.go
#                          ^ source.go punctuation.definition.end.bracket.round.go
#                           ^ source.go
#                            ^^^^ source.go keyword.function.go
#                                ^ source.go punctuation.definition.begin.bracket.round.go
#                                 ^ source.go punctuation.definition.end.bracket.round.go
>
>func Foo0(foo string) func(http.Handler) http.Handler
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^ source.go variable.other.go
#             ^ source.go
#              ^^^^^^ source.go storage.type.string.go
#                    ^ source.go punctuation.definition.end.bracket.round.go
#                     ^ source.go
#                      ^^^^ source.go keyword.function.go
#                          ^ source.go punctuation.definition.begin.bracket.round.go
#                           ^^^^ source.go entity.name.type.go
#                               ^ source.go punctuation.other.period.go
#                                ^^^^^^^ source.go entity.name.type.go
#                                       ^ source.go punctuation.definition.end.bracket.round.go
#                                        ^ source.go
#                                         ^^^^ source.go entity.name.type.go
#                                             ^ source.go punctuation.other.period.go
#                                              ^^^^^^^ source.go entity.name.type.go
>
>func Foo1[t FooX](foo t) {}
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.square.go
#          ^ source.go variable.other.go
#           ^ source.go
#            ^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.definition.end.bracket.square.go
#                 ^ source.go punctuation.definition.begin.bracket.round.go
#                  ^^^ source.go variable.other.go
#                     ^ source.go
#                      ^ source.go entity.name.type.go
#                       ^ source.go punctuation.definition.end.bracket.round.go
#                        ^ source.go
#                         ^ source.go punctuation.definition.begin.bracket.curly.go
#                          ^ source.go punctuation.definition.end.bracket.curly.go
>
>func Foo2(string) <-chan context.Context
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^^^^ source.go storage.type.string.go
#                ^ source.go punctuation.definition.end.bracket.round.go
#                 ^ source.go
#                  ^^ source.go keyword.operator.channel.go
#                    ^^^^ source.go keyword.channel.go
#                        ^^^^^^^^ source.go entity.name.type.go
#                                ^ source.go punctuation.other.period.go
#                                 ^^^^^^^ source.go entity.name.type.go
>
>func Foo02(a <-chan context.Context) <-chan context.Context { return a }
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^ source.go variable.other.go
#            ^ source.go
#             ^^ source.go keyword.operator.channel.go
#               ^^^^ source.go keyword.channel.go
#                   ^ source.go
#                    ^^^^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.other.period.go
#                            ^^^^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.definition.end.bracket.round.go
#                                    ^ source.go
#                                     ^^ source.go keyword.operator.channel.go
#                                       ^^^^ source.go keyword.channel.go
#                                           ^^^^^^^^ source.go entity.name.type.go
#                                                   ^ source.go punctuation.other.period.go
#                                                    ^^^^^^^ source.go entity.name.type.go
#                                                           ^ source.go
#                                                            ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                             ^ source.go
#                                                              ^^^^^^ source.go keyword.control.go
#                                                                    ^ source.go
#                                                                     ^ source.go variable.other.go
#                                                                      ^ source.go
#                                                                       ^ source.go punctuation.definition.end.bracket.curly.go
>
>func Foo3(any) FooX
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^ source.go entity.name.type.any.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^^^^ source.go entity.name.type.go
>
>func Foo5(foo map[FooX]interface{}, bar any) {}
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^ source.go variable.other.go
#             ^ source.go
#              ^^^ source.go keyword.map.go
#                 ^ source.go punctuation.definition.begin.bracket.square.go
#                  ^^^^ source.go entity.name.type.go
#                      ^ source.go punctuation.definition.end.bracket.square.go
#                       ^^^^^^^^^ source.go keyword.interface.go
#                                ^ source.go punctuation.definition.begin.bracket.curly.go
#                                 ^ source.go punctuation.definition.end.bracket.curly.go
#                                  ^ source.go punctuation.other.comma.go
#                                   ^ source.go
#                                    ^^^ source.go variable.other.go
#                                       ^ source.go
#                                        ^^^ source.go entity.name.type.any.go
#                                           ^ source.go punctuation.definition.end.bracket.round.go
#                                            ^ source.go
#                                             ^ source.go punctuation.definition.begin.bracket.curly.go
#                                              ^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar0(func(context.Context))
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^^ source.go keyword.function.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^^^^^^^ source.go entity.name.type.go
#                      ^ source.go punctuation.other.period.go
#                       ^^^^^^^ source.go entity.name.type.go
#                              ^ source.go punctuation.definition.end.bracket.round.go
#                               ^ source.go punctuation.definition.end.bracket.round.go
>
>func Bar01(http.ResponseWriter, *http.Request) {}
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^ source.go entity.name.type.go
#               ^ source.go punctuation.other.period.go
#                ^^^^^^^^^^^^^^ source.go entity.name.type.go
#                              ^ source.go punctuation.other.comma.go
#                               ^ source.go
#                                ^ source.go keyword.operator.address.go
#                                 ^^^^ source.go entity.name.type.go
#                                     ^ source.go punctuation.other.period.go
#                                      ^^^^^^^ source.go entity.name.type.go
#                                             ^ source.go punctuation.definition.end.bracket.round.go
#                                              ^ source.go
#                                               ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                ^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar02(w http.ResponseWriter, r *http.Request) {}
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^ source.go variable.other.go
#            ^ source.go
#             ^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.other.period.go
#                  ^^^^^^^^^^^^^^ source.go entity.name.type.go
#                                ^ source.go punctuation.other.comma.go
#                                 ^ source.go
#                                  ^ source.go variable.other.go
#                                   ^ source.go
#                                    ^ source.go keyword.operator.address.go
#                                     ^^^^ source.go entity.name.type.go
#                                         ^ source.go punctuation.other.period.go
#                                          ^^^^^^^ source.go entity.name.type.go
#                                                 ^ source.go punctuation.definition.end.bracket.round.go
#                                                  ^ source.go
#                                                   ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                    ^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar(context.Context, func(), context.Context) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^ source.go entity.name.function.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.period.go
#                 ^^^^^^^ source.go entity.name.type.go
#                        ^ source.go punctuation.other.comma.go
#                         ^ source.go
#                          ^^^^ source.go keyword.function.go
#                              ^ source.go punctuation.definition.begin.bracket.round.go
#                               ^ source.go punctuation.definition.end.bracket.round.go
#                                ^ source.go punctuation.other.comma.go
#                                 ^ source.go
#                                  ^^^^^^^ source.go entity.name.type.go
#                                         ^ source.go punctuation.other.period.go
#                                          ^^^^^^^ source.go entity.name.type.go
#                                                 ^ source.go punctuation.definition.end.bracket.round.go
#                                                  ^ source.go
#                                                   ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Zoo(foo ...func(Context) context.Context)
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^ source.go entity.name.function.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^^^ source.go variable.other.go
#            ^ source.go
#             ^^^ source.go keyword.operator.ellipsis.go
#                ^^^^ source.go keyword.function.go
#                    ^ source.go punctuation.definition.begin.bracket.round.go
#                     ^^^^^^^ source.go entity.name.type.go
#                            ^ source.go punctuation.definition.end.bracket.round.go
#                             ^ source.go
#                              ^^^^^^^ source.go entity.name.type.go
#                                     ^ source.go punctuation.other.period.go
#                                      ^^^^^^^ source.go entity.name.type.go
#                                             ^ source.go punctuation.definition.end.bracket.round.go
>
>func Chain(middlewares ...func(http.Handler) http.Handler)
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^^^^^^^^ source.go variable.other.go
#                      ^ source.go
#                       ^^^ source.go keyword.operator.ellipsis.go
#                          ^^^^ source.go keyword.function.go
#                              ^ source.go punctuation.definition.begin.bracket.round.go
#                               ^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.period.go
#                                    ^^^^^^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.definition.end.bracket.round.go
#                                            ^ source.go
#                                             ^^^^ source.go entity.name.type.go
#                                                 ^ source.go punctuation.other.period.go
#                                                  ^^^^^^^ source.go entity.name.type.go
#                                                         ^ source.go punctuation.definition.end.bracket.round.go
>
>func Z00(m ...func(http.Handler))
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^ source.go entity.name.function.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^ source.go variable.other.go
#          ^ source.go
#           ^^^ source.go keyword.operator.ellipsis.go
#              ^^^^ source.go keyword.function.go
#                  ^ source.go punctuation.definition.begin.bracket.round.go
#                   ^^^^ source.go entity.name.type.go
#                       ^ source.go punctuation.other.period.go
#                        ^^^^^^^ source.go entity.name.type.go
#                               ^ source.go punctuation.definition.end.bracket.round.go
#                                ^ source.go punctuation.definition.end.bracket.round.go
>
>func Z000(m func(http.Handler))
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^ source.go variable.other.go
#           ^ source.go
#            ^^^^ source.go keyword.function.go
#                ^ source.go punctuation.definition.begin.bracket.round.go
#                 ^^^^ source.go entity.name.type.go
#                     ^ source.go punctuation.other.period.go
#                      ^^^^^^^ source.go entity.name.type.go
#                             ^ source.go punctuation.definition.end.bracket.round.go
#                              ^ source.go punctuation.definition.end.bracket.round.go
>
>func chain(middlewares []func(http.Handler) http.Handler, endpoint http.Handler)
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^^^^^^^^ source.go variable.other.go
#                      ^ source.go
#                       ^ source.go punctuation.definition.begin.bracket.square.go
#                        ^ source.go punctuation.definition.end.bracket.square.go
#                         ^^^^ source.go keyword.function.go
#                             ^ source.go punctuation.definition.begin.bracket.round.go
#                              ^^^^ source.go entity.name.type.go
#                                  ^ source.go punctuation.other.period.go
#                                   ^^^^^^^ source.go entity.name.type.go
#                                          ^ source.go punctuation.definition.end.bracket.round.go
#                                           ^ source.go
#                                            ^^^^ source.go entity.name.type.go
#                                                ^ source.go punctuation.other.period.go
#                                                 ^^^^^^^ source.go entity.name.type.go
#                                                        ^ source.go punctuation.other.comma.go
#                                                         ^ source.go
#                                                          ^^^^^^^^ source.go variable.other.go
#                                                                  ^ source.go
#                                                                   ^^^^ source.go entity.name.type.go
#                                                                       ^ source.go punctuation.other.period.go
#                                                                        ^^^^^^^ source.go entity.name.type.go
#                                                                               ^ source.go punctuation.definition.end.bracket.round.go
>
>func Bar2(context.Context, func(string, context.Context), io.Writer) (foo context.Context, bar string)
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.other.period.go
#                  ^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.other.comma.go
#                          ^ source.go
#                           ^^^^ source.go keyword.function.go
#                               ^ source.go punctuation.definition.begin.bracket.round.go
#                                ^^^^^^ source.go storage.type.string.go
#                                      ^ source.go punctuation.other.comma.go
#                                       ^ source.go
#                                        ^^^^^^^ source.go entity.name.type.go
#                                               ^ source.go punctuation.other.period.go
#                                                ^^^^^^^ source.go entity.name.type.go
#                                                       ^ source.go punctuation.definition.end.bracket.round.go
#                                                        ^ source.go punctuation.other.comma.go
#                                                         ^ source.go
#                                                          ^^ source.go entity.name.type.go
#                                                            ^ source.go punctuation.other.period.go
#                                                             ^^^^^^ source.go entity.name.type.go
#                                                                   ^ source.go punctuation.definition.end.bracket.round.go
#                                                                    ^ source.go
#                                                                     ^ source.go punctuation.definition.begin.bracket.round.go
#                                                                      ^^^ source.go variable.other.go
#                                                                         ^ source.go
#                                                                          ^^^^^^^ source.go entity.name.type.go
#                                                                                 ^ source.go punctuation.other.period.go
#                                                                                  ^^^^^^^ source.go entity.name.type.go
#                                                                                         ^ source.go punctuation.other.comma.go
#                                                                                          ^ source.go
#                                                                                           ^^^ source.go variable.other.go
#                                                                                              ^ source.go
#                                                                                               ^^^^^^ source.go storage.type.string.go
#                                                                                                     ^ source.go punctuation.definition.end.bracket.round.go
>
>func Bar3(foox context.Context, barx func(foo context.Context, bar bool), foobarx io.Writer) (foo context.Context, bar string)
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^^ source.go variable.other.go
#              ^ source.go
#               ^^^^^^^ source.go entity.name.type.go
#                      ^ source.go punctuation.other.period.go
#                       ^^^^^^^ source.go entity.name.type.go
#                              ^ source.go punctuation.other.comma.go
#                               ^ source.go
#                                ^^^^ source.go variable.other.go
#                                    ^ source.go
#                                     ^^^^ source.go keyword.function.go
#                                         ^ source.go punctuation.definition.begin.bracket.round.go
#                                          ^^^ source.go variable.other.go
#                                             ^ source.go
#                                              ^^^^^^^ source.go entity.name.type.go
#                                                     ^ source.go punctuation.other.period.go
#                                                      ^^^^^^^ source.go entity.name.type.go
#                                                             ^ source.go punctuation.other.comma.go
#                                                              ^ source.go
#                                                               ^^^ source.go variable.other.go
#                                                                  ^ source.go
#                                                                   ^^^^ source.go storage.type.boolean.go
#                                                                       ^ source.go punctuation.definition.end.bracket.round.go
#                                                                        ^ source.go punctuation.other.comma.go
#                                                                         ^ source.go
#                                                                          ^^^^^^^ source.go variable.other.go
#                                                                                 ^ source.go
#                                                                                  ^^ source.go entity.name.type.go
#                                                                                    ^ source.go punctuation.other.period.go
#                                                                                     ^^^^^^ source.go entity.name.type.go
#                                                                                           ^ source.go punctuation.definition.end.bracket.round.go
#                                                                                            ^ source.go
#                                                                                             ^ source.go punctuation.definition.begin.bracket.round.go
#                                                                                              ^^^ source.go variable.other.go
#                                                                                                 ^ source.go
#                                                                                                  ^^^^^^^ source.go entity.name.type.go
#                                                                                                         ^ source.go punctuation.other.period.go
#                                                                                                          ^^^^^^^ source.go entity.name.type.go
#                                                                                                                 ^ source.go punctuation.other.comma.go
#                                                                                                                  ^ source.go
#                                                                                                                   ^^^ source.go variable.other.go
#                                                                                                                      ^ source.go
#                                                                                                                       ^^^^^^ source.go storage.type.string.go
#                                                                                                                             ^ source.go punctuation.definition.end.bracket.round.go
>
>func Bar4(context.Context, func(foo context.Context, bar string)) (foo context.Context, bar string)
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.other.period.go
#                  ^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.other.comma.go
#                          ^ source.go
#                           ^^^^ source.go keyword.function.go
#                               ^ source.go punctuation.definition.begin.bracket.round.go
#                                ^^^ source.go variable.other.go
#                                   ^ source.go
#                                    ^^^^^^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.other.period.go
#                                            ^^^^^^^ source.go entity.name.type.go
#                                                   ^ source.go punctuation.other.comma.go
#                                                    ^ source.go
#                                                     ^^^ source.go variable.other.go
#                                                        ^ source.go
#                                                         ^^^^^^ source.go storage.type.string.go
#                                                               ^ source.go punctuation.definition.end.bracket.round.go
#                                                                ^ source.go punctuation.definition.end.bracket.round.go
#                                                                 ^ source.go
#                                                                  ^ source.go punctuation.definition.begin.bracket.round.go
#                                                                   ^^^ source.go variable.other.go
#                                                                      ^ source.go
#                                                                       ^^^^^^^ source.go entity.name.type.go
#                                                                              ^ source.go punctuation.other.period.go
#                                                                               ^^^^^^^ source.go entity.name.type.go
#                                                                                      ^ source.go punctuation.other.comma.go
#                                                                                       ^ source.go
#                                                                                        ^^^ source.go variable.other.go
#                                                                                           ^ source.go
#                                                                                            ^^^^^^ source.go storage.type.string.go
#                                                                                                  ^ source.go punctuation.definition.end.bracket.round.go
>
>func Bar5() *Foo11 {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^ source.go punctuation.definition.end.bracket.round.go
#           ^ source.go
#            ^ source.go keyword.operator.address.go
#             ^^^^^ source.go entity.name.type.go
#                  ^ source.go
#                   ^ source.go punctuation.definition.begin.bracket.curly.go
>	return &Foo11{name: "Foo", age: 99}
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go keyword.operator.address.go
#         ^^^^^ source.go entity.name.type.go
#              ^ source.go punctuation.definition.begin.bracket.curly.go
#               ^^^^ source.go variable.other.go
#                   ^ source.go punctuation.other.colon.go
#                    ^ source.go
#                     ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                      ^^^ source.go string.quoted.double.go
#                         ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                          ^ source.go punctuation.other.comma.go
#                           ^ source.go
#                            ^^^ source.go variable.other.go
#                               ^ source.go punctuation.other.colon.go
#                                ^ source.go
#                                 ^^ source.go constant.numeric.decimal.go
#                                   ^ source.go punctuation.definition.end.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar55() *Foo11 {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^ source.go punctuation.definition.end.bracket.round.go
#            ^ source.go
#             ^ source.go keyword.operator.address.go
#              ^^^^^ source.go entity.name.type.go
#                   ^ source.go
#                    ^ source.go punctuation.definition.begin.bracket.curly.go
>	return &Foo11{
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go keyword.operator.address.go
#         ^^^^^ source.go entity.name.type.go
#              ^ source.go punctuation.definition.begin.bracket.curly.go
>		name: "Foo",
#^^ source.go
#  ^^^^ source.go variable.other.go
#      ^ source.go punctuation.other.colon.go
#       ^ source.go
#        ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#         ^^^ source.go string.quoted.double.go
#            ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#             ^ source.go punctuation.other.comma.go
>		age:  100,
#^^ source.go
#  ^^^ source.go variable.other.go
#     ^ source.go punctuation.other.colon.go
#      ^^ source.go
#        ^^^ source.go constant.numeric.decimal.go
#           ^ source.go punctuation.other.comma.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar6(w http.ResponseWriter, r *http.Request) context.Context {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^ source.go variable.other.go
#           ^ source.go
#            ^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.period.go
#                 ^^^^^^^^^^^^^^ source.go entity.name.type.go
#                               ^ source.go punctuation.other.comma.go
#                                ^ source.go
#                                 ^ source.go variable.other.go
#                                  ^ source.go
#                                   ^ source.go keyword.operator.address.go
#                                    ^^^^ source.go entity.name.type.go
#                                        ^ source.go punctuation.other.period.go
#                                         ^^^^^^^ source.go entity.name.type.go
#                                                ^ source.go punctuation.definition.end.bracket.round.go
#                                                 ^ source.go
#                                                  ^^^^^^^ source.go entity.name.type.go
#                                                         ^ source.go punctuation.other.period.go
#                                                          ^^^^^^^ source.go entity.name.type.go
#                                                                 ^ source.go
#                                                                  ^ source.go punctuation.definition.begin.bracket.curly.go
>	w.Write([]byte("Foo"))
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.period.go
#   ^^^^^ source.go entity.name.function.support.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^ source.go punctuation.definition.begin.bracket.square.go
#          ^ source.go punctuation.definition.end.bracket.square.go
#           ^^^^ source.go storage.type.byte.go
#               ^ source.go punctuation.definition.begin.bracket.round.go
#                ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                 ^^^ source.go string.quoted.double.go
#                    ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                     ^ source.go punctuation.definition.end.bracket.round.go
#                      ^ source.go punctuation.definition.end.bracket.round.go
>	var a context.Context
#^ source.go
# ^^^ source.go keyword.var.go
#    ^ source.go
#     ^ source.go variable.other.assignment.go
#      ^ source.go
#       ^^^^^^^ source.go entity.name.type.go
#              ^ source.go punctuation.other.period.go
#               ^^^^^^^^ source.go entity.name.type.go
>	return a
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go variable.other.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar7[T *FooX | string | *context.Context | int](foo T, bar T) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.square.go
#          ^ source.go variable.other.go
#           ^ source.go
#            ^ source.go keyword.operator.address.go
#             ^^^^ source.go entity.name.type.go
#                 ^ source.go
#                  ^ source.go keyword.operator.arithmetic.bitwise.go
#                   ^ source.go
#                    ^^^^^^ source.go storage.type.string.go
#                          ^ source.go
#                           ^ source.go keyword.operator.arithmetic.bitwise.go
#                            ^ source.go
#                             ^ source.go keyword.operator.address.go
#                              ^^^^^^^ source.go entity.name.type.go
#                                     ^ source.go punctuation.other.period.go
#                                      ^^^^^^^ source.go entity.name.type.go
#                                             ^ source.go
#                                              ^ source.go keyword.operator.arithmetic.bitwise.go
#                                               ^ source.go
#                                                ^^^ source.go storage.type.numeric.go
#                                                   ^ source.go punctuation.definition.end.bracket.square.go
#                                                    ^ source.go punctuation.definition.begin.bracket.round.go
#                                                     ^^^ source.go variable.other.go
#                                                        ^ source.go
#                                                         ^ source.go entity.name.type.go
#                                                          ^ source.go punctuation.other.comma.go
#                                                           ^ source.go
#                                                            ^^^ source.go variable.other.go
#                                                               ^ source.go
#                                                                ^ source.go entity.name.type.go
#                                                                 ^ source.go punctuation.definition.end.bracket.round.go
#                                                                  ^ source.go
#                                                                   ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar8[T FooX](foo []*T, bar []T) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.square.go
#          ^ source.go variable.other.go
#           ^ source.go
#            ^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.definition.end.bracket.square.go
#                 ^ source.go punctuation.definition.begin.bracket.round.go
#                  ^^^ source.go variable.other.go
#                     ^ source.go
#                      ^ source.go punctuation.definition.begin.bracket.square.go
#                       ^ source.go punctuation.definition.end.bracket.square.go
#                        ^ source.go keyword.operator.address.go
#                         ^ source.go entity.name.type.go
#                          ^ source.go punctuation.other.comma.go
#                           ^ source.go
#                            ^^^ source.go variable.other.go
#                               ^ source.go
#                                ^ source.go punctuation.definition.begin.bracket.square.go
#                                 ^ source.go punctuation.definition.end.bracket.square.go
#                                  ^ source.go entity.name.type.go
#                                   ^ source.go punctuation.definition.end.bracket.round.go
#                                    ^ source.go
#                                     ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar9[
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.square.go
>	T FooX, F *context.Context, X Foo15](foo, bar, foobar T) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^^ source.go entity.name.type.go
#       ^ source.go punctuation.other.comma.go
#        ^ source.go
#         ^ source.go variable.other.go
#          ^ source.go
#           ^ source.go keyword.operator.address.go
#            ^^^^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.other.period.go
#                    ^^^^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.other.comma.go
#                            ^ source.go
#                             ^ source.go variable.other.go
#                              ^ source.go
#                               ^^^^^ source.go entity.name.type.go
#                                    ^ source.go punctuation.definition.end.bracket.square.go
#                                     ^ source.go punctuation.definition.begin.bracket.round.go
#                                      ^^^ source.go variable.other.go
#                                         ^ source.go punctuation.other.comma.go
#                                          ^ source.go
#                                           ^^^ source.go variable.other.go
#                                              ^ source.go punctuation.other.comma.go
#                                               ^ source.go
#                                                ^^^^^^ source.go variable.other.go
#                                                      ^ source.go
#                                                       ^ source.go entity.name.type.go
#                                                        ^ source.go punctuation.definition.end.bracket.round.go
#                                                         ^ source.go
#                                                          ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar10[T FooX](foo []*T, bar T) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.square.go
#           ^ source.go variable.other.go
#            ^ source.go
#             ^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.definition.end.bracket.square.go
#                  ^ source.go punctuation.definition.begin.bracket.round.go
#                   ^^^ source.go variable.other.go
#                      ^ source.go
#                       ^ source.go punctuation.definition.begin.bracket.square.go
#                        ^ source.go punctuation.definition.end.bracket.square.go
#                         ^ source.go keyword.operator.address.go
#                          ^ source.go entity.name.type.go
#                           ^ source.go punctuation.other.comma.go
#                            ^ source.go
#                             ^^^ source.go variable.other.go
#                                ^ source.go
#                                 ^ source.go entity.name.type.go
#                                  ^ source.go punctuation.definition.end.bracket.round.go
#                                   ^ source.go
#                                    ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar11[
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.square.go
>	a,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
>	b,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
>	c int, d, e, f FooX](foo a, bar f) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^ source.go storage.type.numeric.go
#      ^ source.go punctuation.other.comma.go
#       ^ source.go
#        ^ source.go variable.other.go
#         ^ source.go punctuation.other.comma.go
#          ^ source.go
#           ^ source.go variable.other.go
#            ^ source.go punctuation.other.comma.go
#             ^ source.go
#              ^ source.go variable.other.go
#               ^ source.go
#                ^^^^ source.go entity.name.type.go
#                    ^ source.go punctuation.definition.end.bracket.square.go
#                     ^ source.go punctuation.definition.begin.bracket.round.go
#                      ^^^ source.go variable.other.go
#                         ^ source.go
#                          ^ source.go entity.name.type.go
#                           ^ source.go punctuation.other.comma.go
#                            ^ source.go
#                             ^^^ source.go variable.other.go
#                                ^ source.go
#                                 ^ source.go entity.name.type.go
#                                  ^ source.go punctuation.definition.end.bracket.round.go
#                                   ^ source.go
#                                    ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>func Bar12[a, b, c, t, z int, aa, bb, cc string](foo t, bar z) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.square.go
#           ^ source.go variable.other.go
#            ^ source.go punctuation.other.comma.go
#             ^ source.go
#              ^ source.go variable.other.go
#               ^ source.go punctuation.other.comma.go
#                ^ source.go
#                 ^ source.go variable.other.go
#                  ^ source.go punctuation.other.comma.go
#                   ^ source.go
#                    ^ source.go variable.other.go
#                     ^ source.go punctuation.other.comma.go
#                      ^ source.go
#                       ^ source.go variable.other.go
#                        ^ source.go
#                         ^^^ source.go storage.type.numeric.go
#                            ^ source.go punctuation.other.comma.go
#                             ^ source.go
#                              ^^ source.go variable.other.go
#                                ^ source.go punctuation.other.comma.go
#                                 ^ source.go
#                                  ^^ source.go variable.other.go
#                                    ^ source.go punctuation.other.comma.go
#                                     ^ source.go
#                                      ^^ source.go variable.other.go
#                                        ^ source.go
#                                         ^^^^^^ source.go storage.type.string.go
#                                               ^ source.go punctuation.definition.end.bracket.square.go
#                                                ^ source.go punctuation.definition.begin.bracket.round.go
#                                                 ^^^ source.go variable.other.go
#                                                    ^ source.go
#                                                     ^ source.go entity.name.type.go
#                                                      ^ source.go punctuation.other.comma.go
#                                                       ^ source.go
#                                                        ^^^ source.go variable.other.go
#                                                           ^ source.go
#                                                            ^ source.go entity.name.type.go
#                                                             ^ source.go punctuation.definition.end.bracket.round.go
#                                                              ^ source.go
#                                                               ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar13(context.Context) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.period.go
#                   ^^^^^^^ source.go entity.name.type.go
#                          ^ source.go punctuation.definition.end.bracket.round.go
#                           ^ source.go
#                            ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar14(string) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^^^ source.go storage.type.string.go
#                 ^ source.go punctuation.definition.end.bracket.round.go
#                  ^ source.go
#                   ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func (*Foo11) Done() map[string]interface{} {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^ source.go keyword.operator.address.go
#       ^^^^^ source.go entity.name.type.go
#            ^ source.go punctuation.definition.end.bracket.round.go
#             ^ source.go
#              ^^^^ source.go entity.name.function.go
#                  ^ source.go punctuation.definition.begin.bracket.round.go
#                   ^ source.go punctuation.definition.end.bracket.round.go
#                    ^ source.go
#                     ^^^ source.go keyword.map.go
#                        ^ source.go punctuation.definition.begin.bracket.square.go
#                         ^^^^^^ source.go storage.type.string.go
#                               ^ source.go punctuation.definition.end.bracket.square.go
#                                ^^^^^^^^^ source.go keyword.interface.go
#                                         ^ source.go punctuation.definition.begin.bracket.curly.go
#                                          ^ source.go punctuation.definition.end.bracket.curly.go
#                                           ^ source.go
#                                            ^ source.go punctuation.definition.begin.bracket.curly.go
>	return nil
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^^^ source.go constant.language.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar15(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
>	b,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
>	c int) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^ source.go storage.type.numeric.go
#      ^ source.go punctuation.definition.end.bracket.round.go
#       ^ source.go
#        ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar16(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	context.Context,
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
#        ^ source.go punctuation.other.period.go
#         ^^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.comma.go
>	string,
#^ source.go
# ^^^^^^ source.go storage.type.string.go
#       ^ source.go punctuation.other.comma.go
>	context.Context) {
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
#        ^ source.go punctuation.other.period.go
#         ^^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.definition.end.bracket.round.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar17(*context.Context, *context.Context, *context.Context) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^ source.go keyword.operator.address.go
#            ^^^^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.other.period.go
#                    ^^^^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.other.comma.go
#                            ^ source.go
#                             ^ source.go keyword.operator.address.go
#                              ^^^^^^^ source.go entity.name.type.go
#                                     ^ source.go punctuation.other.period.go
#                                      ^^^^^^^ source.go entity.name.type.go
#                                             ^ source.go punctuation.other.comma.go
#                                              ^ source.go
#                                               ^ source.go keyword.operator.address.go
#                                                ^^^^^^^ source.go entity.name.type.go
#                                                       ^ source.go punctuation.other.period.go
#                                                        ^^^^^^^ source.go entity.name.type.go
#                                                               ^ source.go punctuation.definition.end.bracket.round.go
#                                                                ^ source.go
#                                                                 ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar18(context.Context, FooX, context.Context) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.period.go
#                   ^^^^^^^ source.go entity.name.type.go
#                          ^ source.go punctuation.other.comma.go
#                           ^ source.go
#                            ^^^^ source.go entity.name.type.go
#                                ^ source.go punctuation.other.comma.go
#                                 ^ source.go
#                                  ^^^^^^^ source.go entity.name.type.go
#                                         ^ source.go punctuation.other.period.go
#                                          ^^^^^^^ source.go entity.name.type.go
#                                                 ^ source.go punctuation.definition.end.bracket.round.go
#                                                  ^ source.go
#                                                   ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar19(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a, b,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
#   ^ source.go
#    ^ source.go variable.other.go
#     ^ source.go punctuation.other.comma.go
>	f context.Context, c, d context.Context) (context.Context, context.Context) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^^^^^ source.go entity.name.type.go
#          ^ source.go punctuation.other.period.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.comma.go
#                   ^ source.go
#                    ^ source.go variable.other.go
#                     ^ source.go punctuation.other.comma.go
#                      ^ source.go
#                       ^ source.go variable.other.go
#                        ^ source.go
#                         ^^^^^^^ source.go entity.name.type.go
#                                ^ source.go punctuation.other.period.go
#                                 ^^^^^^^ source.go entity.name.type.go
#                                        ^ source.go punctuation.definition.end.bracket.round.go
#                                         ^ source.go
#                                          ^ source.go punctuation.definition.begin.bracket.round.go
#                                           ^^^^^^^ source.go entity.name.type.go
#                                                  ^ source.go punctuation.other.period.go
#                                                   ^^^^^^^ source.go entity.name.type.go
#                                                          ^ source.go punctuation.other.comma.go
#                                                           ^ source.go
#                                                            ^^^^^^^ source.go entity.name.type.go
#                                                                   ^ source.go punctuation.other.period.go
#                                                                    ^^^^^^^ source.go entity.name.type.go
#                                                                           ^ source.go punctuation.definition.end.bracket.round.go
#                                                                            ^ source.go
#                                                                             ^ source.go punctuation.definition.begin.bracket.curly.go
>	return a, b
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go variable.other.go
#         ^ source.go punctuation.other.comma.go
#          ^ source.go
#           ^ source.go variable.other.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar20(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a map[string]interface{},
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^ source.go keyword.map.go
#      ^ source.go punctuation.definition.begin.bracket.square.go
#       ^^^^^^ source.go storage.type.string.go
#             ^ source.go punctuation.definition.end.bracket.square.go
#              ^^^^^^^^^ source.go keyword.interface.go
#                       ^ source.go punctuation.definition.begin.bracket.curly.go
#                        ^ source.go punctuation.definition.end.bracket.curly.go
#                         ^ source.go punctuation.other.comma.go
>	b, f context.Context, c, d context.Context) (foo map[string]interface{}, bar context.Context) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
#   ^ source.go
#    ^ source.go variable.other.go
#     ^ source.go
#      ^^^^^^^ source.go entity.name.type.go
#             ^ source.go punctuation.other.period.go
#              ^^^^^^^ source.go entity.name.type.go
#                     ^ source.go punctuation.other.comma.go
#                      ^ source.go
#                       ^ source.go variable.other.go
#                        ^ source.go punctuation.other.comma.go
#                         ^ source.go
#                          ^ source.go variable.other.go
#                           ^ source.go
#                            ^^^^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.period.go
#                                    ^^^^^^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.definition.end.bracket.round.go
#                                            ^ source.go
#                                             ^ source.go punctuation.definition.begin.bracket.round.go
#                                              ^^^ source.go variable.other.go
#                                                 ^ source.go
#                                                  ^^^ source.go keyword.map.go
#                                                     ^ source.go punctuation.definition.begin.bracket.square.go
#                                                      ^^^^^^ source.go storage.type.string.go
#                                                            ^ source.go punctuation.definition.end.bracket.square.go
#                                                             ^^^^^^^^^ source.go keyword.interface.go
#                                                                      ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                                       ^ source.go punctuation.definition.end.bracket.curly.go
#                                                                        ^ source.go punctuation.other.comma.go
#                                                                         ^ source.go
#                                                                          ^^^ source.go variable.other.go
#                                                                             ^ source.go
#                                                                              ^^^^^^^ source.go entity.name.type.go
#                                                                                     ^ source.go punctuation.other.period.go
#                                                                                      ^^^^^^^ source.go entity.name.type.go
#                                                                                             ^ source.go punctuation.definition.end.bracket.round.go
#                                                                                              ^ source.go
#                                                                                               ^ source.go punctuation.definition.begin.bracket.curly.go
>	return a, b
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go variable.other.go
#         ^ source.go punctuation.other.comma.go
#          ^ source.go
#           ^ source.go variable.other.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar21(a string, b context.Context) {}
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^ source.go variable.other.go
#            ^ source.go
#             ^^^^^^ source.go storage.type.string.go
#                   ^ source.go punctuation.other.comma.go
#                    ^ source.go
#                     ^ source.go variable.other.go
#                      ^ source.go
#                       ^^^^^^^ source.go entity.name.type.go
#                              ^ source.go punctuation.other.period.go
#                               ^^^^^^^ source.go entity.name.type.go
#                                      ^ source.go punctuation.definition.end.bracket.round.go
#                                       ^ source.go
#                                        ^ source.go punctuation.definition.begin.bracket.curly.go
#                                         ^ source.go punctuation.definition.end.bracket.curly.go
>func Bar22(ch <-chan context.Context) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^ source.go variable.other.go
#             ^ source.go
#              ^^ source.go keyword.operator.channel.go
#                ^^^^ source.go keyword.channel.go
#                    ^ source.go
#                     ^^^^^^^ source.go entity.name.type.go
#                            ^ source.go punctuation.other.period.go
#                             ^^^^^^^ source.go entity.name.type.go
#                                    ^ source.go punctuation.definition.end.bracket.round.go
#                                     ^ source.go
#                                      ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>func Bar23(foo map[string]interface{}) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^ source.go variable.other.go
#              ^ source.go
#               ^^^ source.go keyword.map.go
#                  ^ source.go punctuation.definition.begin.bracket.square.go
#                   ^^^^^^ source.go storage.type.string.go
#                         ^ source.go punctuation.definition.end.bracket.square.go
#                          ^^^^^^^^^ source.go keyword.interface.go
#                                   ^ source.go punctuation.definition.begin.bracket.curly.go
#                                    ^ source.go punctuation.definition.end.bracket.curly.go
#                                     ^ source.go punctuation.definition.end.bracket.round.go
#                                      ^ source.go
#                                       ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar24(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a context.Context, b <-chan string,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^^^^^ source.go entity.name.type.go
#          ^ source.go punctuation.other.period.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.comma.go
#                   ^ source.go
#                    ^ source.go variable.other.go
#                     ^ source.go
#                      ^^ source.go keyword.operator.channel.go
#                        ^^^^ source.go keyword.channel.go
#                            ^ source.go
#                             ^^^^^^ source.go storage.type.string.go
#                                   ^ source.go punctuation.other.comma.go
>	c context.Context) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^^^^^ source.go entity.name.type.go
#          ^ source.go punctuation.other.period.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.definition.end.bracket.round.go
#                   ^ source.go
#                    ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar25(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a chan<- context.Context, b <-chan struct{}, c context.Context) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^^ source.go keyword.channel.go
#       ^^ source.go keyword.operator.channel.go
#         ^ source.go
#          ^^^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.other.period.go
#                  ^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.other.comma.go
#                          ^ source.go
#                           ^ source.go variable.other.go
#                            ^ source.go
#                             ^^ source.go keyword.operator.channel.go
#                               ^^^^ source.go keyword.channel.go
#                                   ^ source.go
#                                    ^^^^^^ source.go keyword.struct.go
#                                          ^ source.go punctuation.definition.begin.bracket.curly.go
#                                           ^ source.go punctuation.definition.end.bracket.curly.go
#                                            ^ source.go punctuation.other.comma.go
#                                             ^ source.go
#                                              ^ source.go variable.other.go
#                                               ^ source.go
#                                                ^^^^^^^ source.go entity.name.type.go
#                                                       ^ source.go punctuation.other.period.go
#                                                        ^^^^^^^ source.go entity.name.type.go
#                                                               ^ source.go punctuation.definition.end.bracket.round.go
#                                                                ^ source.go
#                                                                 ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar26(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a, b, c <-chan context.Context) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
#   ^ source.go
#    ^ source.go variable.other.go
#     ^ source.go punctuation.other.comma.go
#      ^ source.go
#       ^ source.go variable.other.go
#        ^ source.go
#         ^^ source.go keyword.operator.channel.go
#           ^^^^ source.go keyword.channel.go
#               ^ source.go
#                ^^^^^^^ source.go entity.name.type.go
#                       ^ source.go punctuation.other.period.go
#                        ^^^^^^^ source.go entity.name.type.go
#                               ^ source.go punctuation.definition.end.bracket.round.go
#                                ^ source.go
#                                 ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar27(chan string, chan string, chan context.Context) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^ source.go keyword.channel.go
#               ^ source.go
#                ^^^^^^ source.go storage.type.string.go
#                      ^ source.go punctuation.other.comma.go
#                       ^ source.go
#                        ^^^^ source.go keyword.channel.go
#                            ^ source.go
#                             ^^^^^^ source.go storage.type.string.go
#                                   ^ source.go punctuation.other.comma.go
#                                    ^ source.go
#                                     ^^^^ source.go keyword.channel.go
#                                         ^ source.go
#                                          ^^^^^^^ source.go entity.name.type.go
#                                                 ^ source.go punctuation.other.period.go
#                                                  ^^^^^^^ source.go entity.name.type.go
#                                                         ^ source.go punctuation.definition.end.bracket.round.go
#                                                          ^ source.go
#                                                           ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar28(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
>	b,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
>	c context.Context) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^^^^^ source.go entity.name.type.go
#          ^ source.go punctuation.other.period.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.definition.end.bracket.round.go
#                   ^ source.go
#                    ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar29() {}
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^ source.go punctuation.definition.end.bracket.round.go
#            ^ source.go
#             ^ source.go punctuation.definition.begin.bracket.curly.go
#              ^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar30(context.Context, map[Foo17]interface{},
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.period.go
#                   ^^^^^^^ source.go entity.name.type.go
#                          ^ source.go punctuation.other.comma.go
#                           ^ source.go
#                            ^^^ source.go keyword.map.go
#                               ^ source.go punctuation.definition.begin.bracket.square.go
#                                ^^^^^ source.go entity.name.type.go
#                                     ^ source.go punctuation.definition.end.bracket.square.go
#                                      ^^^^^^^^^ source.go keyword.interface.go
#                                               ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                ^ source.go punctuation.definition.end.bracket.curly.go
#                                                 ^ source.go punctuation.other.comma.go
>	context.Context, func(), io.ReadCloser, io.ReadCloser,
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
#        ^ source.go punctuation.other.period.go
#         ^^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.comma.go
#                 ^ source.go
#                  ^^^^ source.go keyword.function.go
#                      ^ source.go punctuation.definition.begin.bracket.round.go
#                       ^ source.go punctuation.definition.end.bracket.round.go
#                        ^ source.go punctuation.other.comma.go
#                         ^ source.go
#                          ^^ source.go entity.name.type.go
#                            ^ source.go punctuation.other.period.go
#                             ^^^^^^^^^^ source.go entity.name.type.go
#                                       ^ source.go punctuation.other.comma.go
#                                        ^ source.go
#                                         ^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.other.period.go
#                                            ^^^^^^^^^^ source.go entity.name.type.go
#                                                      ^ source.go punctuation.other.comma.go
>	string, func(context.Context), *io.Writer, *io.Reader,
#^ source.go
# ^^^^^^ source.go storage.type.string.go
#       ^ source.go punctuation.other.comma.go
#        ^ source.go
#         ^^^^ source.go keyword.function.go
#             ^ source.go punctuation.definition.begin.bracket.round.go
#              ^^^^^^^ source.go entity.name.type.go
#                     ^ source.go punctuation.other.period.go
#                      ^^^^^^^ source.go entity.name.type.go
#                             ^ source.go punctuation.definition.end.bracket.round.go
#                              ^ source.go punctuation.other.comma.go
#                               ^ source.go
#                                ^ source.go keyword.operator.address.go
#                                 ^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.period.go
#                                    ^^^^^^ source.go entity.name.type.go
#                                          ^ source.go punctuation.other.comma.go
#                                           ^ source.go
#                                            ^ source.go keyword.operator.address.go
#                                             ^^ source.go entity.name.type.go
#                                               ^ source.go punctuation.other.period.go
#                                                ^^^^^^ source.go entity.name.type.go
#                                                      ^ source.go punctuation.other.comma.go
>	error, map[Foo17]interface{}) {
#^ source.go
# ^^^^^ source.go storage.type.error.go
#      ^ source.go punctuation.other.comma.go
#       ^ source.go
#        ^^^ source.go keyword.map.go
#           ^ source.go punctuation.definition.begin.bracket.square.go
#            ^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.definition.end.bracket.square.go
#                  ^^^^^^^^^ source.go keyword.interface.go
#                           ^ source.go punctuation.definition.begin.bracket.curly.go
#                            ^ source.go punctuation.definition.end.bracket.curly.go
#                             ^ source.go punctuation.definition.end.bracket.round.go
#                              ^ source.go
#                               ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func (m *FooX) Bar31(foo string) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^ source.go variable.other.go
#        ^ source.go keyword.operator.address.go
#         ^^^^ source.go entity.name.type.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^^^^^ source.go entity.name.function.go
#                    ^ source.go punctuation.definition.begin.bracket.round.go
#                     ^^^ source.go variable.other.go
#                        ^ source.go
#                         ^^^^^^ source.go storage.type.string.go
#                               ^ source.go punctuation.definition.end.bracket.round.go
#                                ^ source.go
#                                 ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar32(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	context.Context, context.Context,
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
#        ^ source.go punctuation.other.period.go
#         ^^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.comma.go
#                 ^ source.go
#                  ^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.other.period.go
#                          ^^^^^^^ source.go entity.name.type.go
#                                 ^ source.go punctuation.other.comma.go
>	context.Context, io.ReadCloser,
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
#        ^ source.go punctuation.other.period.go
#         ^^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.comma.go
#                 ^ source.go
#                  ^^ source.go entity.name.type.go
#                    ^ source.go punctuation.other.period.go
#                     ^^^^^^^^^^ source.go entity.name.type.go
#                               ^ source.go punctuation.other.comma.go
>	error, map[Foo17]interface{}) {
#^ source.go
# ^^^^^ source.go storage.type.error.go
#      ^ source.go punctuation.other.comma.go
#       ^ source.go
#        ^^^ source.go keyword.map.go
#           ^ source.go punctuation.definition.begin.bracket.square.go
#            ^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.definition.end.bracket.square.go
#                  ^^^^^^^^^ source.go keyword.interface.go
#                           ^ source.go punctuation.definition.begin.bracket.curly.go
#                            ^ source.go punctuation.definition.end.bracket.curly.go
#                             ^ source.go punctuation.definition.end.bracket.round.go
#                              ^ source.go
#                               ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar33(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	context.Context, func(), context.Context, io.ReadCloser, error, map[Foo17]interface{}) {
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
#        ^ source.go punctuation.other.period.go
#         ^^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.comma.go
#                 ^ source.go
#                  ^^^^ source.go keyword.function.go
#                      ^ source.go punctuation.definition.begin.bracket.round.go
#                       ^ source.go punctuation.definition.end.bracket.round.go
#                        ^ source.go punctuation.other.comma.go
#                         ^ source.go
#                          ^^^^^^^ source.go entity.name.type.go
#                                 ^ source.go punctuation.other.period.go
#                                  ^^^^^^^ source.go entity.name.type.go
#                                         ^ source.go punctuation.other.comma.go
#                                          ^ source.go
#                                           ^^ source.go entity.name.type.go
#                                             ^ source.go punctuation.other.period.go
#                                              ^^^^^^^^^^ source.go entity.name.type.go
#                                                        ^ source.go punctuation.other.comma.go
#                                                         ^ source.go
#                                                          ^^^^^ source.go storage.type.error.go
#                                                               ^ source.go punctuation.other.comma.go
#                                                                ^ source.go
#                                                                 ^^^ source.go keyword.map.go
#                                                                    ^ source.go punctuation.definition.begin.bracket.square.go
#                                                                     ^^^^^ source.go entity.name.type.go
#                                                                          ^ source.go punctuation.definition.end.bracket.square.go
#                                                                           ^^^^^^^^^ source.go keyword.interface.go
#                                                                                    ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                                                     ^ source.go punctuation.definition.end.bracket.curly.go
#                                                                                      ^ source.go punctuation.definition.end.bracket.round.go
#                                                                                       ^ source.go
#                                                                                        ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar33_2(context.Context, func(), context.Context, io.ReadCloser, error, map[Foo17]interface{}) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^^^ source.go entity.name.function.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^^^^^^^ source.go entity.name.type.go
#                    ^ source.go punctuation.other.period.go
#                     ^^^^^^^ source.go entity.name.type.go
#                            ^ source.go punctuation.other.comma.go
#                             ^ source.go
#                              ^^^^ source.go keyword.function.go
#                                  ^ source.go punctuation.definition.begin.bracket.round.go
#                                   ^ source.go punctuation.definition.end.bracket.round.go
#                                    ^ source.go punctuation.other.comma.go
#                                     ^ source.go
#                                      ^^^^^^^ source.go entity.name.type.go
#                                             ^ source.go punctuation.other.period.go
#                                              ^^^^^^^ source.go entity.name.type.go
#                                                     ^ source.go punctuation.other.comma.go
#                                                      ^ source.go
#                                                       ^^ source.go entity.name.type.go
#                                                         ^ source.go punctuation.other.period.go
#                                                          ^^^^^^^^^^ source.go entity.name.type.go
#                                                                    ^ source.go punctuation.other.comma.go
#                                                                     ^ source.go
#                                                                      ^^^^^ source.go storage.type.error.go
#                                                                           ^ source.go punctuation.other.comma.go
#                                                                            ^ source.go
#                                                                             ^^^ source.go keyword.map.go
#                                                                                ^ source.go punctuation.definition.begin.bracket.square.go
#                                                                                 ^^^^^ source.go entity.name.type.go
#                                                                                      ^ source.go punctuation.definition.end.bracket.square.go
#                                                                                       ^^^^^^^^^ source.go keyword.interface.go
#                                                                                                ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                                                                 ^ source.go punctuation.definition.end.bracket.curly.go
#                                                                                                  ^ source.go punctuation.definition.end.bracket.round.go
#                                                                                                   ^ source.go
#                                                                                                    ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar34(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a, b, c context.Context) (foo context.Context, bar error) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go punctuation.other.comma.go
#   ^ source.go
#    ^ source.go variable.other.go
#     ^ source.go punctuation.other.comma.go
#      ^ source.go
#       ^ source.go variable.other.go
#        ^ source.go
#         ^^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.period.go
#                 ^^^^^^^ source.go entity.name.type.go
#                        ^ source.go punctuation.definition.end.bracket.round.go
#                         ^ source.go
#                          ^ source.go punctuation.definition.begin.bracket.round.go
#                           ^^^ source.go variable.other.go
#                              ^ source.go
#                               ^^^^^^^ source.go entity.name.type.go
#                                      ^ source.go punctuation.other.period.go
#                                       ^^^^^^^ source.go entity.name.type.go
#                                              ^ source.go punctuation.other.comma.go
#                                               ^ source.go
#                                                ^^^ source.go variable.other.go
#                                                   ^ source.go
#                                                    ^^^^^ source.go storage.type.error.go
#                                                         ^ source.go punctuation.definition.end.bracket.round.go
#                                                          ^ source.go
#                                                           ^ source.go punctuation.definition.begin.bracket.curly.go
>
>	return a, nil
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go variable.other.go
#         ^ source.go punctuation.other.comma.go
#          ^ source.go
#           ^^^ source.go constant.language.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar35(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>
>	foo context.Context, bar context.Context) {
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go
#     ^^^^^^^ source.go entity.name.type.go
#            ^ source.go punctuation.other.period.go
#             ^^^^^^^ source.go entity.name.type.go
#                    ^ source.go punctuation.other.comma.go
#                     ^ source.go
#                      ^^^ source.go variable.other.go
#                         ^ source.go
#                          ^^^^^^^ source.go entity.name.type.go
#                                 ^ source.go punctuation.other.period.go
#                                  ^^^^^^^ source.go entity.name.type.go
#                                         ^ source.go punctuation.definition.end.bracket.round.go
#                                          ^ source.go
#                                           ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar36(context.Context, context.Context) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.period.go
#                   ^^^^^^^ source.go entity.name.type.go
#                          ^ source.go punctuation.other.comma.go
#                           ^ source.go
#                            ^^^^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.period.go
#                                    ^^^^^^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.definition.end.bracket.round.go
#                                            ^ source.go
#                                             ^ source.go punctuation.definition.begin.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar37(ah string) {}
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^ source.go variable.other.go
#             ^ source.go
#              ^^^^^^ source.go storage.type.string.go
#                    ^ source.go punctuation.definition.end.bracket.round.go
#                     ^ source.go
#                      ^ source.go punctuation.definition.begin.bracket.curly.go
#                       ^ source.go punctuation.definition.end.bracket.curly.go
>
>func (s *Foo15) Bar38(a chan<- int) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^ source.go variable.other.go
#        ^ source.go keyword.operator.address.go
#         ^^^^^ source.go entity.name.type.go
#              ^ source.go punctuation.definition.end.bracket.round.go
#               ^ source.go
#                ^^^^^ source.go entity.name.function.go
#                     ^ source.go punctuation.definition.begin.bracket.round.go
#                      ^ source.go variable.other.go
#                       ^ source.go
#                        ^^^^ source.go keyword.channel.go
#                            ^^ source.go keyword.operator.channel.go
#                              ^ source.go
#                               ^^^ source.go storage.type.numeric.go
#                                  ^ source.go punctuation.definition.end.bracket.round.go
#                                   ^ source.go
#                                    ^ source.go punctuation.definition.begin.bracket.curly.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>func Bar39(context.Context, context.Context, string)
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.period.go
#                   ^^^^^^^ source.go entity.name.type.go
#                          ^ source.go punctuation.other.comma.go
#                           ^ source.go
#                            ^^^^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.period.go
#                                    ^^^^^^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.other.comma.go
#                                            ^ source.go
#                                             ^^^^^^ source.go storage.type.string.go
#                                                   ^ source.go punctuation.definition.end.bracket.round.go
>
>func (c *cancelCtx) Value(key any) any {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^ source.go variable.other.go
#        ^ source.go keyword.operator.address.go
#         ^^^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.definition.end.bracket.round.go
#                   ^ source.go
#                    ^^^^^ source.go entity.name.function.go
#                         ^ source.go punctuation.definition.begin.bracket.round.go
#                          ^^^ source.go variable.other.go
#                             ^ source.go
#                              ^^^ source.go entity.name.type.any.go
#                                 ^ source.go punctuation.definition.end.bracket.round.go
#                                  ^ source.go
#                                   ^^^ source.go entity.name.type.any.go
#                                      ^ source.go
#                                       ^ source.go punctuation.definition.begin.bracket.curly.go
>	if key == &cancelCtxKey {
#^ source.go
# ^^ source.go keyword.control.go
#   ^ source.go
#    ^^^ source.go variable.other.go
#       ^ source.go
#        ^^ source.go keyword.operator.comparison.go
#          ^ source.go
#           ^ source.go keyword.operator.address.go
#            ^^^^^^^^^^^^ source.go variable.other.go
#                        ^ source.go
#                         ^ source.go punctuation.definition.begin.bracket.curly.go
>		return c
#^^ source.go
#  ^^^^^^ source.go keyword.control.go
#        ^ source.go
#         ^ source.go variable.other.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	return value(c.Context, key)
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^^^^^ source.go entity.name.function.support.go
#             ^ source.go punctuation.definition.begin.bracket.round.go
#              ^ source.go variable.other.go
#               ^ source.go punctuation.other.period.go
#                ^^^^^^^ source.go variable.other.go
#                       ^ source.go punctuation.other.comma.go
#                        ^ source.go
#                         ^^^ source.go variable.other.go
#                            ^ source.go punctuation.definition.end.bracket.round.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>func Bar40(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a map[string]interface{}, b <-chan *context.Context, c context.Context) context.Context {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^ source.go keyword.map.go
#      ^ source.go punctuation.definition.begin.bracket.square.go
#       ^^^^^^ source.go storage.type.string.go
#             ^ source.go punctuation.definition.end.bracket.square.go
#              ^^^^^^^^^ source.go keyword.interface.go
#                       ^ source.go punctuation.definition.begin.bracket.curly.go
#                        ^ source.go punctuation.definition.end.bracket.curly.go
#                         ^ source.go punctuation.other.comma.go
#                          ^ source.go
#                           ^ source.go variable.other.go
#                            ^ source.go
#                             ^^ source.go keyword.operator.channel.go
#                               ^^^^ source.go keyword.channel.go
#                                   ^ source.go
#                                    ^ source.go keyword.operator.address.go
#                                     ^^^^^^^ source.go entity.name.type.go
#                                            ^ source.go punctuation.other.period.go
#                                             ^^^^^^^ source.go entity.name.type.go
#                                                    ^ source.go punctuation.other.comma.go
#                                                     ^ source.go
#                                                      ^ source.go variable.other.go
#                                                       ^ source.go
#                                                        ^^^^^^^ source.go entity.name.type.go
#                                                               ^ source.go punctuation.other.period.go
#                                                                ^^^^^^^ source.go entity.name.type.go
#                                                                       ^ source.go punctuation.definition.end.bracket.round.go
#                                                                        ^ source.go
#                                                                         ^^^^^^^ source.go entity.name.type.go
#                                                                                ^ source.go punctuation.other.period.go
#                                                                                 ^^^^^^^ source.go entity.name.type.go
#                                                                                        ^ source.go
#                                                                                         ^ source.go punctuation.definition.begin.bracket.curly.go
>	return c
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go variable.other.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func Bar41(
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
>	a *context.Context,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^ source.go keyword.operator.address.go
#    ^^^^^^^ source.go entity.name.type.go
#           ^ source.go punctuation.other.period.go
#            ^^^^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.other.comma.go
>	b string,
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^^^^ source.go storage.type.string.go
#         ^ source.go punctuation.other.comma.go
>	c context.Context) (context.Context, string, context.Context) {
#^ source.go
# ^ source.go variable.other.go
#  ^ source.go
#   ^^^^^^^ source.go entity.name.type.go
#          ^ source.go punctuation.other.period.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.definition.end.bracket.round.go
#                   ^ source.go
#                    ^ source.go punctuation.definition.begin.bracket.round.go
#                     ^^^^^^^ source.go entity.name.type.go
#                            ^ source.go punctuation.other.period.go
#                             ^^^^^^^ source.go entity.name.type.go
#                                    ^ source.go punctuation.other.comma.go
#                                     ^ source.go
#                                      ^^^^^^ source.go storage.type.string.go
#                                            ^ source.go punctuation.other.comma.go
#                                             ^ source.go
#                                              ^^^^^^^ source.go entity.name.type.go
#                                                     ^ source.go punctuation.other.period.go
#                                                      ^^^^^^^ source.go entity.name.type.go
#                                                             ^ source.go punctuation.definition.end.bracket.round.go
#                                                              ^ source.go
#                                                               ^ source.go punctuation.definition.begin.bracket.curly.go
>	return *a, b, c
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go keyword.operator.address.go
#         ^ source.go variable.other.go
#          ^ source.go punctuation.other.comma.go
#           ^ source.go
#            ^ source.go variable.other.go
#             ^ source.go punctuation.other.comma.go
#              ^ source.go
#               ^ source.go variable.other.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func value(c Context, key any) any {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^ source.go entity.name.function.go
#          ^ source.go punctuation.definition.begin.bracket.round.go
#           ^ source.go variable.other.go
#            ^ source.go
#             ^^^^^^^ source.go entity.name.type.go
#                    ^ source.go punctuation.other.comma.go
#                     ^ source.go
#                      ^^^ source.go variable.other.go
#                         ^ source.go
#                          ^^^ source.go entity.name.type.any.go
#                             ^ source.go punctuation.definition.end.bracket.round.go
#                              ^ source.go
#                               ^^^ source.go entity.name.type.any.go
#                                  ^ source.go
#                                   ^ source.go punctuation.definition.begin.bracket.curly.go
>	for {
#^ source.go
# ^^^ source.go keyword.control.go
#    ^ source.go
#     ^ source.go punctuation.definition.begin.bracket.curly.go
>		switch ctx := c.(type) {
#^^ source.go
#  ^^^^^^ source.go keyword.control.go
#        ^ source.go
#         ^^^ source.go variable.other.assignment.go
#            ^ source.go
#             ^^ source.go keyword.operator.assignment.go
#               ^ source.go
#                ^ source.go variable.other.go
#                 ^ source.go punctuation.other.period.go
#                  ^ source.go punctuation.definition.begin.bracket.round.go
#                   ^^^^ source.go keyword.type.go
#                       ^ source.go punctuation.definition.end.bracket.round.go
#                        ^ source.go
#                         ^ source.go punctuation.definition.begin.bracket.curly.go
>		case *cancelCtx:
#^^ source.go
#  ^^^^ source.go keyword.control.go
#      ^ source.go
#       ^ source.go keyword.operator.address.go
#        ^^^^^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.other.colon.go
>			fmt.Println(ctx)
#^^^ source.go
#   ^^^ source.go variable.other.go
#      ^ source.go punctuation.other.period.go
#       ^^^^^^^ source.go entity.name.function.support.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^^^ source.go variable.other.go
#                  ^ source.go punctuation.definition.end.bracket.round.go
>		default:
#^^ source.go
#  ^^^^^^^ source.go keyword.control.go
#         ^ source.go punctuation.other.colon.go
>			return c.Value(key)
#^^^ source.go
#   ^^^^^^ source.go keyword.control.go
#         ^ source.go
#          ^ source.go variable.other.go
#           ^ source.go punctuation.other.period.go
#            ^^^^^ source.go entity.name.function.support.go
#                 ^ source.go punctuation.definition.begin.bracket.round.go
#                  ^^^ source.go variable.other.go
#                     ^ source.go punctuation.definition.end.bracket.round.go
>		}
#^^ source.go
#  ^ source.go punctuation.definition.end.bracket.curly.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func WithValue(parent Context, key, val any) Context {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^^^^^ source.go entity.name.function.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^^^^^^ source.go variable.other.go
#                     ^ source.go
#                      ^^^^^^^ source.go entity.name.type.go
#                             ^ source.go punctuation.other.comma.go
#                              ^ source.go
#                               ^^^ source.go variable.other.go
#                                  ^ source.go punctuation.other.comma.go
#                                   ^ source.go
#                                    ^^^ source.go variable.other.go
#                                       ^ source.go
#                                        ^^^ source.go entity.name.type.any.go
#                                           ^ source.go punctuation.definition.end.bracket.round.go
#                                            ^ source.go
#                                             ^^^^^^^ source.go entity.name.type.go
#                                                    ^ source.go
#                                                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	if parent == nil {
#^ source.go
# ^^ source.go keyword.control.go
#   ^ source.go
#    ^^^^^^ source.go variable.other.go
#          ^ source.go
#           ^^ source.go keyword.operator.comparison.go
#             ^ source.go
#              ^^^ source.go constant.language.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>		panic("cannot create context from nil parent")
#^^ source.go
#  ^^^^^ source.go entity.name.function.support.builtin.go
#       ^ source.go punctuation.definition.begin.bracket.round.go
#        ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.go string.quoted.double.go
#                                              ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                                               ^ source.go punctuation.definition.end.bracket.round.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	if key == nil {
#^ source.go
# ^^ source.go keyword.control.go
#   ^ source.go
#    ^^^ source.go variable.other.go
#       ^ source.go
#        ^^ source.go keyword.operator.comparison.go
#          ^ source.go
#           ^^^ source.go constant.language.go
#              ^ source.go
#               ^ source.go punctuation.definition.begin.bracket.curly.go
>		panic("nil key")
#^^ source.go
#  ^^^^^ source.go entity.name.function.support.builtin.go
#       ^ source.go punctuation.definition.begin.bracket.round.go
#        ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#         ^^^^^^^ source.go string.quoted.double.go
#                ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                 ^ source.go punctuation.definition.end.bracket.round.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	return parent
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^^^^^^ source.go variable.other.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>func parentCancelCtx(parent Context) (*cancelCtx, bool) {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^^^^^^^^^^^^ source.go entity.name.function.go
#                    ^ source.go punctuation.definition.begin.bracket.round.go
#                     ^^^^^^ source.go variable.other.go
#                           ^ source.go
#                            ^^^^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.definition.end.bracket.round.go
#                                    ^ source.go
#                                     ^ source.go punctuation.definition.begin.bracket.round.go
#                                      ^ source.go keyword.operator.address.go
#                                       ^^^^^^^^^ source.go entity.name.type.go
#                                                ^ source.go punctuation.other.comma.go
#                                                 ^ source.go
#                                                  ^^^^ source.go storage.type.boolean.go
#                                                      ^ source.go punctuation.definition.end.bracket.round.go
#                                                       ^ source.go
#                                                        ^ source.go punctuation.definition.begin.bracket.curly.go
>	done := parent.Done()
#^ source.go
# ^^^^ source.go variable.other.assignment.go
#     ^ source.go
#      ^^ source.go keyword.operator.assignment.go
#        ^ source.go
#         ^^^^^^ source.go variable.other.go
#               ^ source.go punctuation.other.period.go
#                ^^^^ source.go entity.name.function.support.go
#                    ^ source.go punctuation.definition.begin.bracket.round.go
#                     ^ source.go punctuation.definition.end.bracket.round.go
>	if done == closedchan || done == nil {
#^ source.go
# ^^ source.go keyword.control.go
#   ^ source.go
#    ^^^^ source.go variable.other.go
#        ^ source.go
#         ^^ source.go keyword.operator.comparison.go
#           ^ source.go
#            ^^^^^^^^^^ source.go variable.other.go
#                      ^ source.go
#                       ^^ source.go keyword.operator.logical.go
#                         ^ source.go
#                          ^^^^ source.go variable.other.go
#                              ^ source.go
#                               ^^ source.go keyword.operator.comparison.go
#                                 ^ source.go
#                                  ^^^ source.go constant.language.go
#                                     ^ source.go
#                                      ^ source.go punctuation.definition.begin.bracket.curly.go
>		return nil, false
#^^ source.go
#  ^^^^^^ source.go keyword.control.go
#        ^ source.go
#         ^^^ source.go constant.language.go
#            ^ source.go punctuation.other.comma.go
#             ^ source.go
#              ^^^^^ source.go constant.language.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	p, ok := parent.Value(&cancelCtxKey).(*cancelCtx)
#^ source.go
# ^ source.go variable.other.assignment.go
#  ^ source.go punctuation.other.comma.go
#   ^ source.go
#    ^^ source.go variable.other.assignment.go
#      ^ source.go
#       ^^ source.go keyword.operator.assignment.go
#         ^ source.go
#          ^^^^^^ source.go variable.other.go
#                ^ source.go punctuation.other.period.go
#                 ^^^^^ source.go entity.name.function.support.go
#                      ^ source.go punctuation.definition.begin.bracket.round.go
#                       ^ source.go keyword.operator.address.go
#                        ^^^^^^^^^^^^ source.go variable.other.go
#                                    ^ source.go punctuation.definition.end.bracket.round.go
#                                     ^ source.go punctuation.other.period.go
#                                      ^ source.go punctuation.definition.begin.bracket.round.go
#                                       ^ source.go keyword.operator.address.go
#                                        ^^^^^^^^^ source.go entity.name.type.go
#                                                 ^ source.go punctuation.definition.end.bracket.round.go
>	if !ok {
#^ source.go
# ^^ source.go keyword.control.go
#   ^ source.go variable.other.go
#    ^ source.go keyword.operator.logical.go
#     ^^^ source.go variable.other.go
#        ^ source.go punctuation.definition.begin.bracket.curly.go
>		return nil, false
#^^ source.go
#  ^^^^^^ source.go keyword.control.go
#        ^ source.go
#         ^^^ source.go constant.language.go
#            ^ source.go punctuation.other.comma.go
#             ^ source.go
#              ^^^^^ source.go constant.language.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	pdone, _ := p.done.Load().(chan struct{})
#^ source.go
# ^^^^^ source.go variable.other.assignment.go
#      ^ source.go punctuation.other.comma.go
#       ^ source.go
#        ^ source.go variable.other.assignment.go
#         ^ source.go
#          ^^ source.go keyword.operator.assignment.go
#            ^ source.go
#             ^ source.go variable.other.go
#              ^ source.go punctuation.other.period.go
#               ^^^^ source.go variable.other.go
#                   ^ source.go punctuation.other.period.go
#                    ^^^^ source.go entity.name.function.support.go
#                        ^ source.go punctuation.definition.begin.bracket.round.go
#                         ^ source.go punctuation.definition.end.bracket.round.go
#                          ^ source.go punctuation.other.period.go
#                           ^ source.go punctuation.definition.begin.bracket.round.go
#                            ^^^^ source.go keyword.channel.go
#                                ^ source.go
#                                 ^^^^^^ source.go keyword.struct.go
#                                       ^ source.go punctuation.definition.begin.bracket.curly.go
#                                        ^ source.go punctuation.definition.end.bracket.curly.go
#                                         ^ source.go punctuation.definition.end.bracket.round.go
>	if pdone != done {
#^ source.go
# ^^ source.go keyword.control.go
#   ^ source.go
#    ^^^^^ source.go variable.other.go
#         ^ source.go
#          ^^ source.go keyword.operator.comparison.go
#            ^ source.go
#             ^^^^ source.go variable.other.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>		return nil, false
#^^ source.go
#  ^^^^^^ source.go keyword.control.go
#        ^ source.go
#         ^^^ source.go constant.language.go
#            ^ source.go punctuation.other.comma.go
#             ^ source.go
#              ^^^^^ source.go constant.language.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	return p, true
#^ source.go
# ^^^^^^ source.go keyword.control.go
#       ^ source.go
#        ^ source.go variable.other.go
#         ^ source.go punctuation.other.comma.go
#          ^ source.go
#           ^^^^ source.go constant.language.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>// var and const
#^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#  ^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>
>const (
#^^^^^ source.go keyword.const.go
#     ^^ source.go punctuation.definition.begin.bracket.round.go
>	CMDSet Command = "FOO"
#^ source.go
# ^^^^^^ source.go variable.other.assignment.go
#       ^ source.go
#        ^^^^^^^^ source.go entity.name.type.go
#                ^ source.go keyword.operator.assignment.go
#                 ^ source.go
#                  ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                   ^^^ source.go string.quoted.double.go
#                      ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	CMD            = "FOO"
#^ source.go
# ^^^ source.go variable.other.assignment.go
#    ^^^^^^^^^^^^ source.go
#                ^ source.go keyword.operator.assignment.go
#                 ^ source.go
#                  ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                   ^^^ source.go string.quoted.double.go
#                      ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>)
#^ source.go punctuation.definition.end.bracket.round.go
>
>var (
#^^^ source.go keyword.var.go
#   ^^ source.go punctuation.definition.begin.bracket.round.go
>	CMDSet1 Command = "FOO"
#^ source.go
# ^^^^^^^ source.go variable.other.assignment.go
#        ^ source.go
#         ^^^^^^^^ source.go entity.name.type.go
#                 ^ source.go keyword.operator.assignment.go
#                  ^ source.go
#                   ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                    ^^^ source.go string.quoted.double.go
#                       ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	CMD1            = "FOO"
#^ source.go
# ^^^^ source.go variable.other.assignment.go
#     ^^^^^^^^^^^^ source.go
#                 ^ source.go keyword.operator.assignment.go
#                  ^ source.go
#                   ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                    ^^^ source.go string.quoted.double.go
#                       ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>)
#^ source.go punctuation.definition.end.bracket.round.go
>
>const (
#^^^^^ source.go keyword.const.go
#     ^^ source.go punctuation.definition.begin.bracket.round.go
>	Fooo = "FOO"
#^ source.go
# ^^^^ source.go variable.other.assignment.go
#     ^ source.go
#      ^ source.go keyword.operator.assignment.go
#       ^ source.go
#        ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#         ^^^ source.go string.quoted.double.go
#            ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	Barr = 911
#^ source.go
# ^^^^ source.go variable.other.assignment.go
#     ^ source.go
#      ^ source.go keyword.operator.assignment.go
#       ^ source.go
#        ^^^ source.go constant.numeric.decimal.go
>)
#^ source.go punctuation.definition.end.bracket.round.go
>
>var (
#^^^ source.go keyword.var.go
#   ^^ source.go punctuation.definition.begin.bracket.round.go
>	background = new(Foo18)
#^ source.go
# ^^^^^^^^^^ source.go variable.other.assignment.go
#           ^ source.go
#            ^ source.go keyword.operator.assignment.go
#             ^ source.go
#              ^^^ source.go entity.name.function.support.builtin.go
#                 ^ source.go punctuation.definition.begin.bracket.round.go
#                  ^^^^^ source.go variable.other.go
#                       ^ source.go punctuation.definition.end.bracket.round.go
>	todo       = new(Foo18)
#^ source.go
# ^^^^ source.go variable.other.assignment.go
#     ^^^^^^^ source.go
#            ^ source.go keyword.operator.assignment.go
#             ^ source.go
#              ^^^ source.go entity.name.function.support.builtin.go
#                 ^ source.go punctuation.definition.begin.bracket.round.go
#                  ^^^^^ source.go variable.other.go
#                       ^ source.go punctuation.definition.end.bracket.round.go
>)
#^ source.go punctuation.definition.end.bracket.round.go
>
>const CMDSet3 Command = "FOO"
#^^^^^ source.go keyword.const.go
#     ^ source.go
#      ^^^^^^^ source.go variable.other.assignment.go
#             ^ source.go
#              ^^^^^^^^ source.go entity.name.type.go
#                      ^ source.go keyword.operator.assignment.go
#                       ^ source.go
#                        ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                         ^^^ source.go string.quoted.double.go
#                            ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>
>const ntCatchAll nodeTyp = 3
#^^^^^ source.go keyword.const.go
#     ^ source.go
#      ^^^^^^^^^^ source.go variable.other.assignment.go
#                ^ source.go
#                 ^^^^^^^^ source.go entity.name.type.go
#                         ^ source.go keyword.operator.assignment.go
#                          ^ source.go
#                           ^ source.go constant.numeric.decimal.go
>
>var closedchan = make(chan struct{})
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^^^^^^^^^ source.go variable.other.assignment.go
#              ^ source.go
#               ^ source.go keyword.operator.assignment.go
#                ^ source.go
#                 ^^^^ source.go entity.name.function.support.builtin.go
#                     ^ source.go punctuation.definition.begin.bracket.round.go
#                      ^^^^ source.go keyword.channel.go
#                          ^ source.go
#                           ^^^^^^ source.go keyword.struct.go
#                                 ^ source.go punctuation.definition.begin.bracket.curly.go
#                                  ^ source.go punctuation.definition.end.bracket.curly.go
#                                   ^ source.go punctuation.definition.end.bracket.round.go
>
>var foo, bar Foo17
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^^ source.go variable.other.assignment.go
#       ^ source.go punctuation.other.comma.go
#        ^^^^ source.go variable.other.assignment.go
#            ^ source.go
#             ^^^^^^ source.go entity.name.type.go
>var foo2 *sync.Mutex
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^^^ source.go variable.other.assignment.go
#        ^ source.go
#         ^ source.go keyword.operator.address.go
#          ^^^^ source.go entity.name.type.go
#              ^ source.go punctuation.other.period.go
#               ^^^^^^ source.go entity.name.type.go
>var foo3 = "bar"
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^^^ source.go variable.other.assignment.go
#        ^ source.go
#         ^ source.go keyword.operator.assignment.go
#          ^ source.go
#           ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#            ^^^ source.go string.quoted.double.go
#               ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>var foo4, bar4 FooX
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^^^ source.go variable.other.assignment.go
#        ^ source.go punctuation.other.comma.go
#         ^^^^^ source.go variable.other.assignment.go
#              ^ source.go
#               ^^^^^ source.go entity.name.type.go
>var bar2 Command
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^^^ source.go variable.other.assignment.go
#        ^ source.go
#         ^^^^^^^^ source.go entity.name.type.go
>var bar3 []*Command
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^^^ source.go variable.other.assignment.go
#        ^ source.go
#         ^ source.go punctuation.definition.begin.bracket.square.go
#          ^ source.go punctuation.definition.end.bracket.square.go
#           ^ source.go keyword.operator.address.go
#            ^^^^^^^^ source.go entity.name.type.go
>var cancelCtxKey int
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^^^^^^^^^^^ source.go variable.other.assignment.go
#                ^ source.go
#                 ^^^ source.go storage.type.numeric.go
>var FO FooX
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^ source.go variable.other.assignment.go
#      ^ source.go
#       ^^^^^ source.go entity.name.type.go
>var BO = 15
#^^^ source.go keyword.var.go
#   ^ source.go
#    ^^ source.go variable.other.assignment.go
#      ^ source.go
#       ^ source.go keyword.operator.assignment.go
#        ^ source.go
#         ^^ source.go constant.numeric.decimal.go
>
>// types, structs and interfaces
#^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>
>type Command string
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^^^ source.go entity.name.type.go
#            ^ source.go
#             ^^^^^^ source.go storage.type.string.go
>
>type Context context.Context
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^^^ source.go entity.name.type.go
#            ^ source.go
#             ^^^^^^^ source.go entity.name.type.go
#                    ^ source.go punctuation.other.period.go
#                     ^^^^^^^^ source.go entity.name.type.go
>
>type ZooX <-chan context.Context
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^ source.go entity.name.type.go
#         ^ source.go
#          ^^ source.go keyword.operator.channel.go
#            ^^^^ source.go keyword.channel.go
#                ^^^^^^^^ source.go entity.name.type.go
#                        ^ source.go punctuation.other.period.go
#                         ^^^^^^^^ source.go entity.name.type.go
>
>type Middlewares []func(http.Handler) http.Handler
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^^^^^^^ source.go entity.name.type.go
#                ^ source.go
#                 ^ source.go punctuation.definition.begin.bracket.square.go
#                  ^ source.go punctuation.definition.end.bracket.square.go
#                   ^^^^ source.go keyword.function.go
#                       ^ source.go punctuation.definition.begin.bracket.round.go
#                        ^^^^ source.go entity.name.type.go
#                            ^ source.go punctuation.other.period.go
#                             ^^^^^^^ source.go entity.name.type.go
#                                    ^ source.go punctuation.definition.end.bracket.round.go
#                                     ^^^^^ source.go entity.name.type.go
#                                          ^ source.go punctuation.other.period.go
#                                           ^^^^^^^^ source.go entity.name.type.go
>
>type Middleware []func(http.Handler) <-chan http.Handler
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^^^^^^ source.go entity.name.type.go
#               ^ source.go
#                ^ source.go punctuation.definition.begin.bracket.square.go
#                 ^ source.go punctuation.definition.end.bracket.square.go
#                  ^^^^ source.go keyword.function.go
#                      ^ source.go punctuation.definition.begin.bracket.round.go
#                       ^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.other.period.go
#                            ^^^^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.definition.end.bracket.round.go
#                                    ^ source.go entity.name.type.go
#                                     ^^ source.go entity.name.type.go keyword.operator.channel.go
#                                       ^^^^ source.go entity.name.type.go keyword.channel.go
#                                           ^^^^^ source.go entity.name.type.go
#                                                ^ source.go punctuation.other.period.go
#                                                 ^^^^^^^^ source.go entity.name.type.go
>
>type Foo4 *sync.Mutex
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^ source.go entity.name.type.go
#         ^ source.go
#          ^ source.go keyword.operator.address.go
#           ^^^^ source.go entity.name.type.go
#               ^ source.go punctuation.other.period.go
#                ^^^^^^ source.go entity.name.type.go
>
>type Foo6 interface{ FooX }
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^ source.go entity.name.type.go
#         ^ source.go
#          ^^^^^^^^^ source.go keyword.interface.go
#                   ^ source.go punctuation.definition.begin.bracket.curly.go
#                    ^ source.go
#                     ^^^^ source.go entity.name.type.go
#                         ^ source.go
#                          ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo06 interface{ *[]FooX }
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go punctuation.definition.begin.bracket.curly.go
#                     ^ source.go
#                      ^ source.go keyword.operator.arithmetic.go
#                       ^ source.go punctuation.definition.begin.bracket.square.go
#                        ^ source.go punctuation.definition.end.bracket.square.go
#                         ^^^^ source.go entity.name.type.go
#                             ^ source.go
#                              ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo07 struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>	FooX
#^ source.go
# ^^^^ source.go entity.name.type.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo7 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^ source.go entity.name.type.go
#         ^ source.go
#          ^^^^^^^^^ source.go keyword.interface.go
#                   ^ source.go
#                    ^ source.go punctuation.definition.begin.bracket.curly.go
>	[]FooX
#^ source.go
# ^ source.go punctuation.definition.begin.bracket.square.go
#  ^ source.go punctuation.definition.end.bracket.square.go
#   ^^^^ source.go entity.name.type.go
>	Context
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo8 interface{ FooX | *context.Context }
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^ source.go entity.name.type.go
#         ^ source.go
#          ^^^^^^^^^ source.go keyword.interface.go
#                   ^ source.go punctuation.definition.begin.bracket.curly.go
#                    ^ source.go
#                     ^^^^ source.go entity.name.type.go
#                         ^ source.go
#                          ^ source.go keyword.operator.arithmetic.bitwise.go
#                           ^ source.go
#                            ^ source.go keyword.operator.address.go
#                             ^^^^^^^ source.go entity.name.type.go
#                                    ^ source.go punctuation.other.period.go
#                                     ^^^^^^^ source.go entity.name.type.go
#                                            ^ source.go
#                                             ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo9 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^ source.go entity.name.type.go
#         ^ source.go
#          ^^^^^^^^^ source.go keyword.interface.go
#                   ^ source.go
#                    ^ source.go punctuation.definition.begin.bracket.curly.go
>	FooX | Foo11
#^ source.go
# ^^^^ source.go entity.name.type.go
#     ^ source.go
#      ^ source.go keyword.operator.arithmetic.bitwise.go
#       ^ source.go
#        ^^^^^ source.go entity.name.type.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo10 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	FooX | <-chan *context.Context
#^ source.go
# ^^^^ source.go entity.name.type.go
#     ^ source.go
#      ^ source.go keyword.operator.arithmetic.bitwise.go
#       ^ source.go
#        ^^ source.go keyword.operator.channel.go
#          ^^^^ source.go keyword.channel.go
#              ^ source.go
#               ^ source.go keyword.operator.address.go
#                ^^^^^^^ source.go entity.name.type.go
#                       ^ source.go punctuation.other.period.go
#                        ^^^^^^^ source.go entity.name.type.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo12 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	chan FooX | chan Foo11
#^ source.go
# ^^^^ source.go keyword.channel.go
#     ^ source.go
#      ^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^ source.go keyword.operator.arithmetic.bitwise.go
#            ^ source.go
#             ^^^^ source.go keyword.channel.go
#                 ^ source.go
#                  ^^^^^ source.go entity.name.type.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo13 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	Bar(string, func(context.Context))
#^ source.go
# ^^^ source.go entity.name.function.support.go
#    ^ source.go punctuation.definition.begin.bracket.round.go
#     ^^^^^^ source.go storage.type.string.go
#           ^ source.go punctuation.other.comma.go
#            ^ source.go
#             ^^^^ source.go keyword.function.go
#                 ^ source.go punctuation.definition.begin.bracket.round.go
#                  ^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.other.period.go
#                          ^^^^^^^ source.go entity.name.type.go
#                                 ^ source.go punctuation.definition.end.bracket.round.go
#                                  ^ source.go punctuation.definition.end.bracket.round.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo14 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	Bar(w http.ResponseWriter, r *http.Request) (foo context.Context, bar string)
#^ source.go
# ^^^ source.go entity.name.function.support.go
#    ^ source.go punctuation.definition.begin.bracket.round.go
#     ^ source.go variable.other.go
#      ^ source.go
#       ^^^^ source.go entity.name.type.go
#           ^ source.go punctuation.other.period.go
#            ^^^^^^^^^^^^^^ source.go entity.name.type.go
#                          ^ source.go punctuation.other.comma.go
#                           ^ source.go
#                            ^ source.go variable.other.go
#                             ^ source.go
#                              ^ source.go keyword.operator.address.go
#                               ^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.period.go
#                                    ^^^^^^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.definition.end.bracket.round.go
#                                            ^ source.go
#                                             ^ source.go punctuation.definition.begin.bracket.round.go
#                                              ^^^ source.go variable.other.go
#                                                 ^ source.go
#                                                  ^^^^^^^ source.go entity.name.type.go
#                                                         ^ source.go punctuation.other.period.go
#                                                          ^^^^^^^ source.go entity.name.type.go
#                                                                 ^ source.go punctuation.other.comma.go
#                                                                  ^ source.go
#                                                                   ^^^ source.go variable.other.go
#                                                                      ^ source.go
#                                                                       ^^^^^^ source.go storage.type.string.go
#                                                                             ^ source.go punctuation.definition.end.bracket.round.go
>	Bar2(http.ResponseWriter, *http.Request) (context.Context, string)
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^^ source.go entity.name.type.go
#          ^ source.go punctuation.other.period.go
#           ^^^^^^^^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.other.comma.go
#                          ^ source.go
#                           ^ source.go keyword.operator.address.go
#                            ^^^^ source.go entity.name.type.go
#                                ^ source.go punctuation.other.period.go
#                                 ^^^^^^^ source.go entity.name.type.go
#                                        ^ source.go punctuation.definition.end.bracket.round.go
#                                         ^ source.go
#                                          ^ source.go punctuation.definition.begin.bracket.round.go
#                                           ^^^^^^^ source.go entity.name.type.go
#                                                  ^ source.go punctuation.other.period.go
#                                                   ^^^^^^^ source.go entity.name.type.go
#                                                          ^ source.go punctuation.other.comma.go
#                                                           ^ source.go
#                                                            ^^^^^^ source.go storage.type.string.go
#                                                                  ^ source.go punctuation.definition.end.bracket.round.go
>	Bar3(string, func(bar context.Context)) (foo context.Context, bar string)
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^^^^ source.go storage.type.string.go
#            ^ source.go punctuation.other.comma.go
#             ^ source.go
#              ^^^^ source.go keyword.function.go
#                  ^ source.go punctuation.definition.begin.bracket.round.go
#                   ^^^ source.go variable.other.go
#                      ^ source.go
#                       ^^^^^^^ source.go entity.name.type.go
#                              ^ source.go punctuation.other.period.go
#                               ^^^^^^^ source.go entity.name.type.go
#                                      ^ source.go punctuation.definition.end.bracket.round.go
#                                       ^ source.go punctuation.definition.end.bracket.round.go
#                                        ^ source.go
#                                         ^ source.go punctuation.definition.begin.bracket.round.go
#                                          ^^^ source.go variable.other.go
#                                             ^ source.go
#                                              ^^^^^^^ source.go entity.name.type.go
#                                                     ^ source.go punctuation.other.period.go
#                                                      ^^^^^^^ source.go entity.name.type.go
#                                                             ^ source.go punctuation.other.comma.go
#                                                              ^ source.go
#                                                               ^^^ source.go variable.other.go
#                                                                  ^ source.go
#                                                                   ^^^^^^ source.go storage.type.string.go
#                                                                         ^ source.go punctuation.definition.end.bracket.round.go
>	Bar4(foo *context.Context, bar func(context.Context)) (foox context.Context, barx string)
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^ source.go variable.other.go
#         ^ source.go
#          ^ source.go keyword.operator.address.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.period.go
#                   ^^^^^^^ source.go entity.name.type.go
#                          ^ source.go punctuation.other.comma.go
#                           ^ source.go
#                            ^^^ source.go variable.other.go
#                               ^ source.go
#                                ^^^^ source.go keyword.function.go
#                                    ^ source.go punctuation.definition.begin.bracket.round.go
#                                     ^^^^^^^ source.go entity.name.type.go
#                                            ^ source.go punctuation.other.period.go
#                                             ^^^^^^^ source.go entity.name.type.go
#                                                    ^ source.go punctuation.definition.end.bracket.round.go
#                                                     ^ source.go punctuation.definition.end.bracket.round.go
#                                                      ^ source.go
#                                                       ^ source.go punctuation.definition.begin.bracket.round.go
#                                                        ^^^^ source.go variable.other.go
#                                                            ^ source.go
#                                                             ^^^^^^^ source.go entity.name.type.go
#                                                                    ^ source.go punctuation.other.period.go
#                                                                     ^^^^^^^ source.go entity.name.type.go
#                                                                            ^ source.go punctuation.other.comma.go
#                                                                             ^ source.go
#                                                                              ^^^^ source.go variable.other.go
#                                                                                  ^ source.go
#                                                                                   ^^^^^^ source.go storage.type.string.go
#                                                                                         ^ source.go punctuation.definition.end.bracket.round.go
>	Bar5(context.Context, func(foo chan<- context.Context, bar string), *io.Reader) (foo context.Context, bar string)
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^^^^^ source.go entity.name.type.go
#             ^ source.go punctuation.other.period.go
#              ^^^^^^^ source.go entity.name.type.go
#                     ^ source.go punctuation.other.comma.go
#                      ^ source.go
#                       ^^^^ source.go keyword.function.go
#                           ^ source.go punctuation.definition.begin.bracket.round.go
#                            ^^^ source.go variable.other.go
#                               ^ source.go
#                                ^^^^ source.go keyword.channel.go
#                                    ^^ source.go keyword.operator.channel.go
#                                      ^ source.go
#                                       ^^^^^^^ source.go entity.name.type.go
#                                              ^ source.go punctuation.other.period.go
#                                               ^^^^^^^ source.go entity.name.type.go
#                                                      ^ source.go punctuation.other.comma.go
#                                                       ^ source.go
#                                                        ^^^ source.go variable.other.go
#                                                           ^ source.go
#                                                            ^^^^^^ source.go storage.type.string.go
#                                                                  ^ source.go punctuation.definition.end.bracket.round.go
#                                                                   ^ source.go punctuation.other.comma.go
#                                                                    ^ source.go
#                                                                     ^ source.go keyword.operator.address.go
#                                                                      ^^ source.go entity.name.type.go
#                                                                        ^ source.go punctuation.other.period.go
#                                                                         ^^^^^^ source.go entity.name.type.go
#                                                                               ^ source.go punctuation.definition.end.bracket.round.go
#                                                                                ^ source.go
#                                                                                 ^ source.go punctuation.definition.begin.bracket.round.go
#                                                                                  ^^^ source.go variable.other.go
#                                                                                     ^ source.go
#                                                                                      ^^^^^^^ source.go entity.name.type.go
#                                                                                             ^ source.go punctuation.other.period.go
#                                                                                              ^^^^^^^ source.go entity.name.type.go
#                                                                                                     ^ source.go punctuation.other.comma.go
#                                                                                                      ^ source.go
#                                                                                                       ^^^ source.go variable.other.go
#                                                                                                          ^ source.go
#                                                                                                           ^^^^^^ source.go storage.type.string.go
#                                                                                                                 ^ source.go punctuation.definition.end.bracket.round.go
>	Bar6(context.Context, func(*context.Context, string)) (*context.Context, string)
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^^^^^ source.go entity.name.type.go
#             ^ source.go punctuation.other.period.go
#              ^^^^^^^ source.go entity.name.type.go
#                     ^ source.go punctuation.other.comma.go
#                      ^ source.go
#                       ^^^^ source.go keyword.function.go
#                           ^ source.go punctuation.definition.begin.bracket.round.go
#                            ^ source.go keyword.operator.address.go
#                             ^^^^^^^ source.go entity.name.type.go
#                                    ^ source.go punctuation.other.period.go
#                                     ^^^^^^^ source.go entity.name.type.go
#                                            ^ source.go punctuation.other.comma.go
#                                             ^ source.go
#                                              ^^^^^^ source.go storage.type.string.go
#                                                    ^ source.go punctuation.definition.end.bracket.round.go
#                                                     ^ source.go punctuation.definition.end.bracket.round.go
#                                                      ^ source.go
#                                                       ^ source.go punctuation.definition.begin.bracket.round.go
#                                                        ^ source.go keyword.operator.address.go
#                                                         ^^^^^^^ source.go entity.name.type.go
#                                                                ^ source.go punctuation.other.period.go
#                                                                 ^^^^^^^ source.go entity.name.type.go
#                                                                        ^ source.go punctuation.other.comma.go
#                                                                         ^ source.go
#                                                                          ^^^^^^ source.go storage.type.string.go
#                                                                                ^ source.go punctuation.definition.end.bracket.round.go
>	Bar7(foo *context.Context) (context.Context, context.Context)
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^ source.go variable.other.go
#         ^ source.go
#          ^ source.go keyword.operator.address.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.period.go
#                   ^^^^^^^ source.go entity.name.type.go
#                          ^ source.go punctuation.definition.end.bracket.round.go
#                           ^ source.go
#                            ^ source.go punctuation.definition.begin.bracket.round.go
#                             ^^^^^^^ source.go entity.name.type.go
#                                    ^ source.go punctuation.other.period.go
#                                     ^^^^^^^ source.go entity.name.type.go
#                                            ^ source.go punctuation.other.comma.go
#                                             ^ source.go
#                                              ^^^^^^^ source.go entity.name.type.go
#                                                     ^ source.go punctuation.other.period.go
#                                                      ^^^^^^^ source.go entity.name.type.go
#                                                             ^ source.go punctuation.definition.end.bracket.round.go
>	Bar8(foo string) context.Context
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^ source.go variable.other.go
#         ^ source.go
#          ^^^^^^ source.go storage.type.string.go
#                ^ source.go punctuation.definition.end.bracket.round.go
#                 ^ source.go
#                  ^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.other.period.go
#                          ^^^^^^^ source.go entity.name.type.go
>	Bar9(foo func()) <-chan context.Context
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^ source.go variable.other.go
#         ^ source.go
#          ^^^^ source.go keyword.function.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^ source.go punctuation.definition.end.bracket.round.go
#                ^ source.go punctuation.definition.end.bracket.round.go
#                 ^ source.go
#                  ^^ source.go keyword.operator.channel.go
#                    ^^^^ source.go keyword.channel.go
#                        ^ source.go
#                         ^^^^^^^ source.go entity.name.type.go
#                                ^ source.go punctuation.other.period.go
#                                 ^^^^^^^ source.go entity.name.type.go
>	Bar10() (context.Context, error)
#^ source.go
# ^^^^^ source.go entity.name.function.support.go
#      ^ source.go punctuation.definition.begin.bracket.round.go
#       ^ source.go punctuation.definition.end.bracket.round.go
#        ^ source.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^^^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.other.period.go
#                  ^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.other.comma.go
#                          ^ source.go
#                           ^^^^^ source.go storage.type.error.go
#                                ^ source.go punctuation.definition.end.bracket.round.go
>	Bar11(foox any) (foo context.Context, bar context.Context)
#^ source.go
# ^^^^^ source.go entity.name.function.support.go
#      ^ source.go punctuation.definition.begin.bracket.round.go
#       ^^^^ source.go variable.other.go
#           ^ source.go
#            ^^^ source.go entity.name.type.any.go
#               ^ source.go punctuation.definition.end.bracket.round.go
#                ^ source.go
#                 ^ source.go punctuation.definition.begin.bracket.round.go
#                  ^^^ source.go variable.other.go
#                     ^ source.go
#                      ^^^^^^^ source.go entity.name.type.go
#                             ^ source.go punctuation.other.period.go
#                              ^^^^^^^ source.go entity.name.type.go
#                                     ^ source.go punctuation.other.comma.go
#                                      ^ source.go
#                                       ^^^ source.go variable.other.go
#                                          ^ source.go
#                                           ^^^^^^^ source.go entity.name.type.go
#                                                  ^ source.go punctuation.other.period.go
#                                                   ^^^^^^^ source.go entity.name.type.go
#                                                          ^ source.go punctuation.definition.end.bracket.round.go
>	Bar12(foo map[FooX]interface{}) (context.Context, context.Context)
#^ source.go
# ^^^^^ source.go entity.name.function.support.go
#      ^ source.go punctuation.definition.begin.bracket.round.go
#       ^^^ source.go variable.other.go
#          ^ source.go
#           ^^^ source.go keyword.map.go
#              ^ source.go punctuation.definition.begin.bracket.square.go
#               ^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.definition.end.bracket.square.go
#                    ^^^^^^^^^ source.go keyword.interface.go
#                             ^ source.go punctuation.definition.begin.bracket.curly.go
#                              ^ source.go punctuation.definition.end.bracket.curly.go
#                               ^ source.go punctuation.definition.end.bracket.round.go
#                                ^ source.go
#                                 ^ source.go punctuation.definition.begin.bracket.round.go
#                                  ^^^^^^^ source.go entity.name.type.go
#                                         ^ source.go punctuation.other.period.go
#                                          ^^^^^^^ source.go entity.name.type.go
#                                                 ^ source.go punctuation.other.comma.go
#                                                  ^ source.go
#                                                   ^^^^^^^ source.go entity.name.type.go
#                                                          ^ source.go punctuation.other.period.go
#                                                           ^^^^^^^ source.go entity.name.type.go
#                                                                  ^ source.go punctuation.definition.end.bracket.round.go
>	Bar13() *map[FooX]interface{}
#^ source.go
# ^^^^^ source.go entity.name.function.support.go
#      ^ source.go punctuation.definition.begin.bracket.round.go
#       ^ source.go punctuation.definition.end.bracket.round.go
#        ^ source.go
#         ^ source.go keyword.operator.address.go
#          ^^^ source.go keyword.map.go
#             ^ source.go punctuation.definition.begin.bracket.square.go
#              ^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.definition.end.bracket.square.go
#                   ^^^^^^^^^ source.go keyword.interface.go
#                            ^ source.go punctuation.definition.begin.bracket.curly.go
#                             ^ source.go punctuation.definition.end.bracket.curly.go
>	Bar14() []FooX
#^ source.go
# ^^^^^ source.go entity.name.function.support.go
#      ^ source.go punctuation.definition.begin.bracket.round.go
#       ^ source.go punctuation.definition.end.bracket.round.go
#        ^ source.go
#         ^ source.go punctuation.definition.begin.bracket.square.go
#          ^ source.go punctuation.definition.end.bracket.square.go
#           ^^^^ source.go entity.name.type.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo18 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	Foo(a string) func(a Foo11)
#^ source.go
# ^^^ source.go entity.name.function.support.go
#    ^ source.go punctuation.definition.begin.bracket.round.go
#     ^ source.go variable.other.go
#      ^ source.go
#       ^^^^^^ source.go storage.type.string.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^^^^ source.go keyword.function.go
#                   ^ source.go punctuation.definition.begin.bracket.round.go
#                    ^ source.go variable.other.go
#                     ^ source.go
#                      ^^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.definition.end.bracket.round.go
>	Bar(a bool) (err error)
#^ source.go
# ^^^ source.go entity.name.function.support.go
#    ^ source.go punctuation.definition.begin.bracket.round.go
#     ^ source.go variable.other.go
#      ^ source.go
#       ^^^^ source.go storage.type.boolean.go
#           ^ source.go punctuation.definition.end.bracket.round.go
#            ^ source.go
#             ^ source.go punctuation.definition.begin.bracket.round.go
#              ^^^ source.go variable.other.go
#                 ^ source.go
#                  ^^^^^ source.go storage.type.error.go
#                       ^ source.go punctuation.definition.end.bracket.round.go
>	FooBar(a context.Context) error
#^ source.go
# ^^^^^^ source.go entity.name.function.support.go
#       ^ source.go punctuation.definition.begin.bracket.round.go
#        ^ source.go variable.other.go
#         ^ source.go
#          ^^^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.other.period.go
#                  ^^^^^^^ source.go entity.name.type.go
#                         ^ source.go punctuation.definition.end.bracket.round.go
#                          ^ source.go
#                           ^^^^^ source.go storage.type.error.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo11 struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>	name string
#^ source.go
# ^^^^ source.go variable.other.go
#     ^ source.go
#      ^^^^^^ source.go storage.type.string.go
>	age  int
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go
#     ^ source.go
#      ^^^ source.go storage.type.numeric.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo19 *context.Context
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^ source.go keyword.operator.address.go
#            ^^^^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.other.period.go
#                    ^^^^^^^^ source.go entity.name.type.go
>
>type Foo20 struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>	Foo15
#^ source.go
# ^^^^^ source.go entity.name.type.go
>	Foo17
#^ source.go
# ^^^^^ source.go entity.name.type.go
>	Foo       Foo16
#^ source.go
# ^^^ source.go variable.other.go
#    ^^^^^^ source.go
#          ^ source.go
#           ^^^^^ source.go entity.name.type.go
>	FFoo, Bar string
#^ source.go
# ^^^^ source.go variable.other.go
#     ^ source.go punctuation.other.comma.go
#      ^ source.go
#       ^^^ source.go variable.other.go
#          ^ source.go
#           ^^^^^^ source.go storage.type.string.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo21 struct{ foo, bar Foo16 }
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go punctuation.definition.begin.bracket.curly.go
#                  ^ source.go
#                   ^^^ source.go variable.other.go
#                      ^ source.go punctuation.other.comma.go
#                       ^ source.go
#                        ^^^ source.go variable.other.go
#                           ^ source.go
#                            ^^^^^ source.go entity.name.type.go
#                                 ^ source.go
#                                  ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo22 context.Context
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.other.period.go
#                   ^^^^^^^^ source.go entity.name.type.go
>
>type Foo23 map[string]interface{}
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^ source.go keyword.map.go
#              ^ source.go punctuation.definition.begin.bracket.square.go
#               ^^^^^^ source.go storage.type.string.go
#                     ^ source.go punctuation.definition.end.bracket.square.go
#                      ^^^^^^^^^ source.go keyword.interface.go
#                               ^ source.go punctuation.definition.begin.bracket.curly.go
#                                ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo24 struct{ foo, bar FooX }
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go punctuation.definition.begin.bracket.curly.go
#                  ^ source.go
#                   ^^^ source.go variable.other.go
#                      ^ source.go punctuation.other.comma.go
#                       ^ source.go
#                        ^^^ source.go variable.other.go
#                           ^ source.go
#                            ^^^^ source.go entity.name.type.go
#                                ^ source.go
#                                 ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo15 struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>	foo, bar string
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go punctuation.other.comma.go
#     ^ source.go
#      ^^^ source.go variable.other.go
#         ^ source.go
#          ^^^^^^ source.go storage.type.string.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo16 struct{}
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go punctuation.definition.begin.bracket.curly.go
#                  ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo17 struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>	name string
#^ source.go
# ^^^^ source.go variable.other.go
#     ^ source.go
#      ^^^^^^ source.go storage.type.string.go
>	age  int
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go
#     ^ source.go
#      ^^^ source.go storage.type.numeric.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type nodeTyp uint8
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^^^ source.go entity.name.type.go
#            ^ source.go
#             ^^^^^ source.go storage.type.numeric.go
>
>type Foo25 struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>	Foo15
#^ source.go
# ^^^^^ source.go entity.name.type.go
>	*Foo17
#^ source.go
# ^ source.go keyword.operator.address.go
#  ^^^^^ source.go entity.name.type.go
>	Foo    func() (context.Context, func(), io.ReadCloser, error, map[Foo17]interface{})
#^ source.go
# ^^^ source.go variable.other.go
#    ^^^^ source.go
#        ^^^^ source.go keyword.function.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^ source.go punctuation.definition.begin.bracket.round.go
#                ^^^^^^^ source.go entity.name.type.go
#                       ^ source.go punctuation.other.period.go
#                        ^^^^^^^ source.go entity.name.type.go
#                               ^ source.go punctuation.other.comma.go
#                                ^ source.go
#                                 ^^^^ source.go keyword.function.go
#                                     ^ source.go punctuation.definition.begin.bracket.round.go
#                                      ^ source.go punctuation.definition.end.bracket.round.go
#                                       ^ source.go punctuation.other.comma.go
#                                        ^ source.go
#                                         ^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.other.period.go
#                                            ^^^^^^^^^^ source.go entity.name.type.go
#                                                      ^ source.go punctuation.other.comma.go
#                                                       ^ source.go
#                                                        ^^^^^ source.go storage.type.error.go
#                                                             ^ source.go punctuation.other.comma.go
#                                                              ^ source.go
#                                                               ^^^ source.go keyword.map.go
#                                                                  ^ source.go punctuation.definition.begin.bracket.square.go
#                                                                   ^^^^^ source.go entity.name.type.go
#                                                                        ^ source.go punctuation.definition.end.bracket.square.go
#                                                                         ^^^^^^^^^ source.go keyword.interface.go
#                                                                                  ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                                                   ^ source.go punctuation.definition.end.bracket.curly.go
#                                                                                    ^ source.go punctuation.definition.end.bracket.round.go
>	Bar    func() (foo context.Context, bar io.ReadCloser, err error)
#^ source.go
# ^^^ source.go variable.other.go
#    ^^^^ source.go
#        ^^^^ source.go keyword.function.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^ source.go punctuation.definition.begin.bracket.round.go
#                ^^^ source.go variable.other.go
#                   ^ source.go
#                    ^^^^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.other.period.go
#                            ^^^^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.comma.go
#                                    ^ source.go
#                                     ^^^ source.go variable.other.go
#                                        ^ source.go
#                                         ^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.other.period.go
#                                            ^^^^^^^^^^ source.go entity.name.type.go
#                                                      ^ source.go punctuation.other.comma.go
#                                                       ^ source.go
#                                                        ^^^ source.go variable.other.go
#                                                           ^ source.go
#                                                            ^^^^^ source.go storage.type.error.go
#                                                                 ^ source.go punctuation.definition.end.bracket.round.go
>	Fooo   Foo17
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^^^^^ source.go entity.name.type.go
>	Barr   string
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^^^^^^ source.go storage.type.string.go
>	Foo2   map[Foo17]interface{}
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^^^ source.go keyword.map.go
#           ^ source.go punctuation.definition.begin.bracket.square.go
#            ^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.definition.end.bracket.square.go
#                  ^^^^^^^^^ source.go keyword.interface.go
#                           ^ source.go punctuation.definition.begin.bracket.curly.go
#                            ^ source.go punctuation.definition.end.bracket.curly.go
>	Bar2   func(foo FooX) (foox, barx, foobar io.Writer)
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^^ source.go
#        ^^^^ source.go keyword.function.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^^^ source.go variable.other.go
#                ^ source.go
#                 ^^^^ source.go entity.name.type.go
#                     ^ source.go punctuation.definition.end.bracket.round.go
#                      ^ source.go
#                       ^ source.go punctuation.definition.begin.bracket.round.go
#                        ^^^^ source.go variable.other.go
#                            ^ source.go punctuation.other.comma.go
#                             ^ source.go
#                              ^^^^ source.go variable.other.go
#                                  ^ source.go punctuation.other.comma.go
#                                   ^ source.go
#                                    ^^^^^^ source.go variable.other.go
#                                          ^ source.go
#                                           ^^ source.go entity.name.type.go
#                                             ^ source.go punctuation.other.period.go
#                                              ^^^^^^ source.go entity.name.type.go
#                                                    ^ source.go punctuation.definition.end.bracket.round.go
>	FooBar *Foo17
#^ source.go
# ^^^^^^ source.go variable.other.go
#       ^ source.go
#        ^ source.go keyword.operator.address.go
#         ^^^^^ source.go entity.name.type.go
>	Foo3   func() (foo context.Context, bar io.ReadCloser, foobar *map[Foo17]interface{})
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^^ source.go
#        ^^^^ source.go keyword.function.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^ source.go punctuation.definition.begin.bracket.round.go
#                ^^^ source.go variable.other.go
#                   ^ source.go
#                    ^^^^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.other.period.go
#                            ^^^^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.comma.go
#                                    ^ source.go
#                                     ^^^ source.go variable.other.go
#                                        ^ source.go
#                                         ^^ source.go entity.name.type.go
#                                           ^ source.go punctuation.other.period.go
#                                            ^^^^^^^^^^ source.go entity.name.type.go
#                                                      ^ source.go punctuation.other.comma.go
#                                                       ^ source.go
#                                                        ^^^^^^ source.go variable.other.go
#                                                              ^ source.go
#                                                               ^ source.go keyword.operator.address.go
#                                                                ^^^ source.go keyword.map.go
#                                                                   ^ source.go punctuation.definition.begin.bracket.square.go
#                                                                    ^^^^^ source.go entity.name.type.go
#                                                                         ^ source.go punctuation.definition.end.bracket.square.go
#                                                                          ^^^^^^^^^ source.go keyword.interface.go
#                                                                                   ^ source.go punctuation.definition.begin.bracket.curly.go
#                                                                                    ^ source.go punctuation.definition.end.bracket.curly.go
#                                                                                     ^ source.go punctuation.definition.end.bracket.round.go
>	Bar3   func() map[Foo17]interface{}
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^^^^ source.go keyword.function.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go entity.name.type.go
#               ^^^ source.go entity.name.type.go keyword.map.go
#                  ^ source.go entity.name.type.go punctuation.definition.begin.bracket.square.go
#                   ^^^^^ source.go entity.name.type.go entity.name.type.go
#                        ^ source.go entity.name.type.go punctuation.definition.end.bracket.square.go
#                         ^^^^^^^^^ source.go entity.name.type.go keyword.interface.go
#                                  ^ source.go punctuation.definition.begin.bracket.curly.go
#                                   ^ source.go punctuation.definition.end.bracket.curly.go
>	Foo4   chan<- Foo17
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^^^^ source.go keyword.channel.go
#            ^^ source.go keyword.operator.channel.go
#              ^^^^^^ source.go entity.name.type.go
>	Bar4   <-chan Foo17
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^^ source.go keyword.operator.channel.go
#          ^^^^ source.go keyword.channel.go
#              ^^^^^^ source.go entity.name.type.go
>	Foo5   chan *Foo17
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^^ source.go
#        ^^^^ source.go keyword.channel.go
#            ^ source.go
#             ^ source.go keyword.operator.address.go
#              ^^^^^ source.go entity.name.type.go
>	Bar5   chan Foo17
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^^ source.go
#        ^^^^ source.go keyword.channel.go
#            ^ source.go
#             ^^^^^ source.go entity.name.type.go
>	Foo6   []func(http.Handler) http.Handler
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^ source.go punctuation.definition.begin.bracket.square.go
#         ^ source.go punctuation.definition.end.bracket.square.go
#          ^^^^ source.go keyword.function.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.other.period.go
#                    ^^^^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.definition.end.bracket.round.go
#                            ^^^^^ source.go entity.name.type.go
#                                 ^ source.go punctuation.other.period.go
#                                  ^^^^^^^ source.go entity.name.type.go
>	Bar6   func() context.Context
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^^^^ source.go keyword.function.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^^^^^^^^ source.go entity.name.type.go
#                      ^ source.go punctuation.other.period.go
#                       ^^^^^^^ source.go entity.name.type.go
>	Foo7   []func(http.Handler) <-chan http.Handler
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^ source.go punctuation.definition.begin.bracket.square.go
#         ^ source.go punctuation.definition.end.bracket.square.go
#          ^^^^ source.go keyword.function.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.other.period.go
#                    ^^^^^^^ source.go entity.name.type.go
#                           ^ source.go punctuation.definition.end.bracket.round.go
#                            ^ source.go entity.name.type.go
#                             ^^ source.go entity.name.type.go keyword.operator.channel.go
#                               ^^^^ source.go entity.name.type.go keyword.channel.go
#                                   ^^^^^ source.go entity.name.type.go
#                                        ^ source.go punctuation.other.period.go
#                                         ^^^^^^^ source.go entity.name.type.go
>	Bar7   []nodeTyp
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^ source.go punctuation.definition.begin.bracket.square.go
#         ^ source.go punctuation.definition.end.bracket.square.go
#          ^^^^^^^ source.go entity.name.type.go
>	Foo8   [ntCatchAll + 1]nodeTyp
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^ source.go punctuation.definition.begin.bracket.square.go
#         ^^^^^^^^^^ source.go variable.other.go
#                   ^ source.go
#                    ^ source.go keyword.operator.arithmetic.go
#                     ^ source.go
#                      ^ source.go constant.numeric.decimal.go
#                       ^ source.go punctuation.definition.end.bracket.square.go
#                        ^^^^^^^ source.go entity.name.type.go
>	Bar8   []*nodeTyp
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^ source.go
#       ^ source.go
#        ^ source.go punctuation.definition.begin.bracket.square.go
#         ^ source.go punctuation.definition.end.bracket.square.go
#          ^ source.go keyword.operator.address.go
#           ^^^^^^^ source.go entity.name.type.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo26 struct{ Foo15 }
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go punctuation.definition.begin.bracket.curly.go
#                  ^ source.go
#                   ^^^^^ source.go entity.name.type.go
#                        ^ source.go
#                         ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo27 struct{ foo <-chan Foo15 }
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go punctuation.definition.begin.bracket.curly.go
#                  ^ source.go
#                   ^^^ source.go variable.other.go
#                      ^ source.go
#                       ^^ source.go keyword.operator.channel.go
#                         ^^^^ source.go keyword.channel.go
#                             ^^^^^^ source.go entity.name.type.go
#                                   ^ source.go
#                                    ^ source.go punctuation.definition.end.bracket.curly.go
>
>type Account struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^^^ source.go entity.name.type.go
#            ^ source.go
#             ^^^^^^ source.go keyword.struct.go
#                   ^ source.go
#                    ^ source.go punctuation.definition.begin.bracket.curly.go
>	context.Context
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
#        ^ source.go punctuation.other.period.go
#         ^^^^^^^ source.go entity.name.type.go
>	*Foo17
#^ source.go
# ^ source.go keyword.operator.address.go
#  ^^^^^ source.go entity.name.type.go
>	Email      context.Context `json:"Email"`
#^ source.go
# ^^^^^ source.go variable.other.go
#      ^^^^^ source.go
#           ^ source.go
#            ^^^^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.other.period.go
#                    ^^^^^^^ source.go entity.name.type.go
#                           ^ source.go
#                            ^ source.go string.quoted.raw.go punctuation.definition.string.begin.go
#                             ^^^^^^^^^^^^ source.go string.quoted.raw.go
#                                         ^ source.go string.quoted.raw.go punctuation.definition.string.end.go
>	Password   string          `json:"Password"`
#^ source.go
# ^^^^^^^^ source.go variable.other.go
#         ^^ source.go
#           ^ source.go
#            ^^^^^^ source.go storage.type.string.go
#                  ^^^^^^^^^^ source.go
#                            ^ source.go string.quoted.raw.go punctuation.definition.string.begin.go
#                             ^^^^^^^^^^^^^^^ source.go string.quoted.raw.go
#                                            ^ source.go string.quoted.raw.go punctuation.definition.string.end.go
>	First_name string          `json:"First_name"`
#^ source.go
# ^^^^^^^^^^ source.go variable.other.go
#           ^ source.go
#            ^^^^^^ source.go storage.type.string.go
#                  ^^^^^^^^^^ source.go
#                            ^ source.go string.quoted.raw.go punctuation.definition.string.begin.go
#                             ^^^^^^^^^^^^^^^^^ source.go string.quoted.raw.go
#                                              ^ source.go string.quoted.raw.go punctuation.definition.string.end.go
>	Last_name  string          `json:"Last_name"`
#^ source.go
# ^^^^^^^^^ source.go variable.other.go
#          ^ source.go
#           ^ source.go
#            ^^^^^^ source.go storage.type.string.go
#                  ^^^^^^^^^^ source.go
#                            ^ source.go string.quoted.raw.go punctuation.definition.string.begin.go
#                             ^^^^^^^^^^^^^^^^ source.go string.quoted.raw.go
#                                             ^ source.go string.quoted.raw.go punctuation.definition.string.end.go
>	Birth_date *int            `json:"Birth_date"`
#^ source.go
# ^^^^^^^^^^ source.go variable.other.go
#           ^ source.go
#            ^ source.go keyword.operator.address.go
#             ^^^ source.go storage.type.numeric.go
#                ^^^^^^^^^^^^ source.go
#                            ^ source.go string.quoted.raw.go punctuation.definition.string.begin.go
#                             ^^^^^^^^^^^^^^^^^ source.go string.quoted.raw.go
#                                              ^ source.go string.quoted.raw.go punctuation.definition.string.end.go
>	Gender     *string         `json:"Gender"`
#^ source.go
# ^^^^^^ source.go variable.other.go
#       ^^^^ source.go
#           ^ source.go
#            ^ source.go keyword.operator.address.go
#             ^^^^^^ source.go storage.type.string.go
#                   ^^^^^^^^^ source.go
#                            ^ source.go string.quoted.raw.go punctuation.definition.string.begin.go
#                             ^^^^^^^^^^^^^ source.go string.quoted.raw.go
#                                          ^ source.go string.quoted.raw.go punctuation.definition.string.end.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo28 string
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go storage.type.string.go
>
>type Foo29 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	Foo28 | sync.Mutex | int
#^ source.go
# ^^^^^ source.go entity.name.type.go
#      ^ source.go
#       ^ source.go keyword.operator.arithmetic.bitwise.go
#        ^ source.go
#         ^^^^ source.go entity.name.type.go
#             ^ source.go punctuation.other.period.go
#              ^^^^^ source.go entity.name.type.go
#                   ^ source.go
#                    ^ source.go keyword.operator.arithmetic.bitwise.go
#                     ^ source.go
#                      ^^^ source.go storage.type.numeric.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo30 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	string | int64 | int32 | []byte
#^ source.go
# ^^^^^^ source.go storage.type.string.go
#       ^ source.go
#        ^ source.go keyword.operator.arithmetic.bitwise.go
#         ^ source.go
#          ^^^^^ source.go storage.type.numeric.go
#               ^ source.go
#                ^ source.go keyword.operator.arithmetic.bitwise.go
#                 ^ source.go
#                  ^^^^^ source.go storage.type.numeric.go
#                       ^ source.go
#                        ^ source.go keyword.operator.arithmetic.bitwise.go
#                         ^ source.go
#                          ^ source.go punctuation.definition.begin.bracket.square.go
#                           ^ source.go punctuation.definition.end.bracket.square.go
#                            ^^^^ source.go storage.type.byte.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo31 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	*string | int64 | int32 | []*byte
#^ source.go
# ^ source.go keyword.operator.address.go
#  ^^^^^^ source.go storage.type.string.go
#        ^ source.go
#         ^ source.go keyword.operator.arithmetic.bitwise.go
#          ^ source.go
#           ^^^^^ source.go storage.type.numeric.go
#                ^ source.go
#                 ^ source.go keyword.operator.arithmetic.bitwise.go
#                  ^ source.go
#                   ^^^^^ source.go storage.type.numeric.go
#                        ^ source.go
#                         ^ source.go keyword.operator.arithmetic.bitwise.go
#                          ^ source.go
#                           ^ source.go punctuation.definition.begin.bracket.square.go
#                            ^ source.go punctuation.definition.end.bracket.square.go
#                             ^ source.go keyword.operator.address.go
#                              ^^^^ source.go storage.type.byte.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo32 struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^ source.go keyword.struct.go
#                 ^ source.go
#                  ^ source.go punctuation.definition.begin.bracket.curly.go
>	cancelCtx // foo
#^ source.go
# ^^^^^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#             ^^^^ source.go comment.line.double-slash.go
>	timerCtx  /* bar */
#^ source.go
# ^^^^^^^^ source.go entity.name.type.go
#         ^^ source.go
#           ^^ source.go comment.block.go punctuation.definition.comment.go
#             ^^^^^ source.go comment.block.go
#                  ^^ source.go comment.block.go punctuation.definition.comment.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type Foo33 interface {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^^^^^^^^ source.go keyword.interface.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	cancelCtx // foo
#^ source.go
# ^^^^^^^^^ source.go entity.name.type.go
#          ^ source.go
#           ^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#             ^^^^ source.go comment.line.double-slash.go
>	timerCtx  /* bar */
#^ source.go
# ^^^^^^^^ source.go entity.name.type.go
#         ^^ source.go
#           ^^ source.go comment.block.go punctuation.definition.comment.go
#             ^^^^^ source.go comment.block.go
#                  ^^ source.go comment.block.go punctuation.definition.comment.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>type FooY int
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^ source.go entity.name.type.go
#         ^ source.go
#          ^^^ source.go storage.type.numeric.go
>
>type FooX struct{}
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^ source.go entity.name.type.go
#         ^ source.go
#          ^^^^^^ source.go keyword.struct.go
#                ^ source.go punctuation.definition.begin.bracket.curly.go
#                 ^ source.go punctuation.definition.end.bracket.curly.go
>
>type timerCtx struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^^^^ source.go entity.name.type.go
#             ^ source.go
#              ^^^^^^ source.go keyword.struct.go
#                    ^ source.go
#                     ^ source.go punctuation.definition.begin.bracket.curly.go
>	cancelCtx
#^ source.go
# ^^^^^^^^^ source.go entity.name.type.go
>	timer *time.Timer // Under cancelCtx.mu.
#^ source.go
# ^^^^^ source.go variable.other.go
#      ^ source.go
#       ^ source.go keyword.operator.address.go
#        ^^^^ source.go entity.name.type.go
#            ^ source.go punctuation.other.period.go
#             ^^^^^ source.go entity.name.type.go
#                  ^ source.go
#                   ^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#                     ^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>
>	deadline time.Time
#^ source.go
# ^^^^^^^^ source.go variable.other.go
#         ^ source.go
#          ^^^^ source.go entity.name.type.go
#              ^ source.go punctuation.other.period.go
#               ^^^^ source.go entity.name.type.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>// A cancelCtx can be canceled. When canceled, it also cancels any children
#^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>// that implement canceler.
#^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#  ^^^^^^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>type cancelCtx struct {
#^^^^ source.go keyword.type.go
#    ^ source.go
#     ^^^^^^^^^ source.go entity.name.type.go
#              ^ source.go
#               ^^^^^^ source.go keyword.struct.go
#                     ^ source.go
#                      ^ source.go punctuation.definition.begin.bracket.curly.go
>	Context
#^ source.go
# ^^^^^^^ source.go entity.name.type.go
>
>	mu       sync.Mutex        // protects following fields
#^ source.go
# ^^ source.go variable.other.go
#   ^^^^^^ source.go
#         ^ source.go
#          ^^^^ source.go entity.name.type.go
#              ^ source.go punctuation.other.period.go
#               ^^^^^ source.go entity.name.type.go
#                    ^^^^^^^^ source.go
#                            ^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>	done     atomic.Value      // of chan struct{}, created lazily, closed by first cancel call
#^ source.go
# ^^^^ source.go variable.other.go
#     ^^^^ source.go
#         ^ source.go
#          ^^^^^^ source.go entity.name.type.go
#                ^ source.go punctuation.other.period.go
#                 ^^^^^ source.go entity.name.type.go
#                      ^^^^^^ source.go
#                            ^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>	children map[FooX]struct{} // set to nil by the first cancel call
#^ source.go
# ^^^^^^^^ source.go variable.other.go
#         ^ source.go
#          ^^^ source.go keyword.map.go
#             ^ source.go punctuation.definition.begin.bracket.square.go
#              ^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.definition.end.bracket.square.go
#                   ^^^^^^ source.go keyword.struct.go
#                         ^ source.go punctuation.definition.begin.bracket.curly.go
#                          ^ source.go punctuation.definition.end.bracket.curly.go
#                           ^ source.go
#                            ^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>	err      error             // set to non-nil by the first cancel call
#^ source.go
# ^^^ source.go variable.other.go
#    ^^^^^ source.go
#         ^ source.go
#          ^^^^^ source.go storage.type.error.go
#               ^^^^^^^^^^^^^ source.go
#                            ^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>
>// function body
#^^ source.go comment.line.double-slash.go punctuation.definition.comment.go
#  ^^^^^^^^^^^^^^ source.go comment.line.double-slash.go
>func main() {
#^^^^ source.go keyword.function.go
#    ^ source.go
#     ^^^^ source.go entity.name.function.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^ source.go punctuation.definition.end.bracket.round.go
#           ^ source.go
#            ^ source.go punctuation.definition.begin.bracket.curly.go
>	var foox map[FooX]string
#^ source.go
# ^^^ source.go keyword.var.go
#    ^ source.go
#     ^^^^ source.go variable.other.assignment.go
#         ^ source.go
#          ^^^ source.go keyword.map.go
#             ^ source.go punctuation.definition.begin.bracket.square.go
#              ^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.definition.end.bracket.square.go
#                   ^^^^^^ source.go storage.type.string.go
>	var fooy map[FooX]interface{}
#^ source.go
# ^^^ source.go keyword.var.go
#    ^ source.go
#     ^^^^ source.go variable.other.assignment.go
#         ^ source.go
#          ^^^ source.go keyword.map.go
#             ^ source.go punctuation.definition.begin.bracket.square.go
#              ^^^^ source.go entity.name.type.go
#                  ^ source.go punctuation.definition.end.bracket.square.go
#                   ^^^^^^^^^ source.go keyword.interface.go
#                            ^ source.go punctuation.definition.begin.bracket.curly.go
#                             ^ source.go punctuation.definition.end.bracket.curly.go
>	bar := 15
#^ source.go
# ^^^ source.go variable.other.assignment.go
#    ^ source.go
#     ^^ source.go keyword.operator.assignment.go
#       ^ source.go
#        ^^ source.go constant.numeric.decimal.go
>	fmt.Printf("foo %d", bar)
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go punctuation.other.period.go
#     ^^^^^^ source.go entity.name.function.support.go
#           ^ source.go punctuation.definition.begin.bracket.round.go
#            ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#             ^^^^ source.go string.quoted.double.go
#                 ^^ source.go string.quoted.double.go constant.other.placeholder.go
#                   ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                    ^ source.go punctuation.other.comma.go
#                     ^ source.go
#                      ^^^ source.go variable.other.go
#                         ^ source.go punctuation.definition.end.bracket.round.go
>	foo := "bar"
#^ source.go
# ^^^ source.go variable.other.assignment.go
#    ^ source.go
#     ^^ source.go keyword.operator.assignment.go
#       ^ source.go
#        ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#         ^^^ source.go string.quoted.double.go
#            ^ source.go string.quoted.double.go punctuation.definition.string.end.go
>	fmt.Println(foo, foox, fooy)
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go punctuation.other.period.go
#     ^^^^^^^ source.go entity.name.function.support.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^^^ source.go variable.other.go
#                ^ source.go punctuation.other.comma.go
#                 ^ source.go
#                  ^^^^ source.go variable.other.go
#                      ^ source.go punctuation.other.comma.go
#                       ^ source.go
#                        ^^^^ source.go variable.other.go
#                            ^ source.go punctuation.definition.end.bracket.round.go
>	time.Now().Weekday()
#^ source.go
# ^^^^ source.go variable.other.go
#     ^ source.go punctuation.other.period.go
#      ^^^ source.go entity.name.function.support.go
#         ^ source.go punctuation.definition.begin.bracket.round.go
#          ^ source.go punctuation.definition.end.bracket.round.go
#           ^ source.go punctuation.other.period.go
#            ^^^^^^^ source.go entity.name.function.support.go
#                   ^ source.go punctuation.definition.begin.bracket.round.go
#                    ^ source.go punctuation.definition.end.bracket.round.go
>	whatAmI := func(i interface{}) {
#^ source.go
# ^^^^^^^ source.go variable.other.assignment.go
#        ^ source.go
#         ^^ source.go keyword.operator.assignment.go
#           ^ source.go
#            ^^^^ source.go keyword.function.go
#                ^ source.go punctuation.definition.begin.bracket.round.go
#                 ^ source.go variable.other.go
#                  ^ source.go
#                   ^^^^^^^^^ source.go keyword.interface.go
#                            ^ source.go punctuation.definition.begin.bracket.curly.go
#                             ^ source.go punctuation.definition.end.bracket.curly.go
#                              ^ source.go punctuation.definition.end.bracket.round.go
#                               ^ source.go
#                                ^ source.go punctuation.definition.begin.bracket.curly.go
>		switch t := i.(type) {
#^^ source.go
#  ^^^^^^ source.go keyword.control.go
#        ^ source.go
#         ^ source.go variable.other.assignment.go
#          ^ source.go
#           ^^ source.go keyword.operator.assignment.go
#             ^ source.go
#              ^ source.go variable.other.go
#               ^ source.go punctuation.other.period.go
#                ^ source.go punctuation.definition.begin.bracket.round.go
#                 ^^^^ source.go keyword.type.go
#                     ^ source.go punctuation.definition.end.bracket.round.go
#                      ^ source.go
#                       ^ source.go punctuation.definition.begin.bracket.curly.go
>		case *cancelCtx:
#^^ source.go
#  ^^^^ source.go keyword.control.go
#      ^ source.go
#       ^ source.go keyword.operator.address.go
#        ^^^^^^^^^ source.go entity.name.type.go
#                 ^ source.go punctuation.other.colon.go
>			fmt.Println("I'm a cancelCtx")
#^^^ source.go
#   ^^^ source.go variable.other.go
#      ^ source.go punctuation.other.period.go
#       ^^^^^^^ source.go entity.name.function.support.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                ^^^^^^^^^^^^^^^ source.go string.quoted.double.go
#                               ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                                ^ source.go punctuation.definition.end.bracket.round.go
>		case int, string:
#^^ source.go
#  ^^^^ source.go keyword.control.go
#      ^ source.go
#       ^^^ source.go storage.type.numeric.go
#          ^ source.go punctuation.other.comma.go
#           ^ source.go
#            ^^^^^^ source.go storage.type.string.go
#                  ^ source.go punctuation.other.colon.go
>			fmt.Println("I'm an int")
#^^^ source.go
#   ^^^ source.go variable.other.go
#      ^ source.go punctuation.other.period.go
#       ^^^^^^^ source.go entity.name.function.support.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                ^^^^^^^^^^ source.go string.quoted.double.go
#                          ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                           ^ source.go punctuation.definition.end.bracket.round.go
>		case FooX:
#^^ source.go
#  ^^^^ source.go keyword.control.go
#      ^ source.go
#       ^^^^ source.go entity.name.type.go
#           ^ source.go punctuation.other.colon.go
>			fmt.Println("I'm a FooX")
#^^^ source.go
#   ^^^ source.go variable.other.go
#      ^ source.go punctuation.other.period.go
#       ^^^^^^^ source.go entity.name.function.support.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                ^^^^^^^^^^ source.go string.quoted.double.go
#                          ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                           ^ source.go punctuation.definition.end.bracket.round.go
>		case bool:
#^^ source.go
#  ^^^^ source.go keyword.control.go
#      ^ source.go
#       ^^^^ source.go storage.type.boolean.go
#           ^ source.go punctuation.other.colon.go
>			fmt.Println("I'm a bool")
#^^^ source.go
#   ^^^ source.go variable.other.go
#      ^ source.go punctuation.other.period.go
#       ^^^^^^^ source.go entity.name.function.support.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                ^^^^^^^^^^ source.go string.quoted.double.go
#                          ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                           ^ source.go punctuation.definition.end.bracket.round.go
>		case Foo17, Foo16:
#^^ source.go
#  ^^^^ source.go keyword.control.go
#      ^ source.go
#       ^^^^^ source.go entity.name.type.go
#            ^ source.go punctuation.other.comma.go
#             ^ source.go
#              ^^^^^ source.go entity.name.type.go
#                   ^ source.go punctuation.other.colon.go
>			fmt.Println("I'm a Foo17, Foo16")
#^^^ source.go
#   ^^^ source.go variable.other.go
#      ^ source.go punctuation.other.period.go
#       ^^^^^^^ source.go entity.name.function.support.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                ^^^^^^^^^^^^^^^^^^ source.go string.quoted.double.go
#                                  ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                                   ^ source.go punctuation.definition.end.bracket.round.go
>		default:
#^^ source.go
#  ^^^^^^^ source.go keyword.control.go
#         ^ source.go punctuation.other.colon.go
>			fmt.Printf("Don't know type %T\n", t)
#^^^ source.go
#   ^^^ source.go variable.other.go
#      ^ source.go punctuation.other.period.go
#       ^^^^^^ source.go entity.name.function.support.go
#             ^ source.go punctuation.definition.begin.bracket.round.go
#              ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#               ^^^^^^^^^^^^^^^^ source.go string.quoted.double.go
#                               ^^ source.go string.quoted.double.go constant.other.placeholder.go
#                                 ^^ source.go string.quoted.double.go constant.character.escape.go
#                                   ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                                    ^ source.go punctuation.other.comma.go
#                                     ^ source.go
#                                      ^ source.go variable.other.go
#                                       ^ source.go punctuation.definition.end.bracket.round.go
>		}
#^^ source.go
#  ^ source.go punctuation.definition.end.bracket.curly.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	fmt.Println("Hello World!")
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go punctuation.other.period.go
#     ^^^^^^^ source.go entity.name.function.support.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#              ^^^^^^^^^^^^ source.go string.quoted.double.go
#                          ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                           ^ source.go punctuation.definition.end.bracket.round.go
>	data := []string{"foo", "bar"}
#^ source.go
# ^^^^ source.go variable.other.assignment.go
#     ^ source.go
#      ^^ source.go keyword.operator.assignment.go
#        ^ source.go
#         ^ source.go punctuation.definition.begin.bracket.square.go
#          ^ source.go punctuation.definition.end.bracket.square.go
#           ^^^^^^ source.go storage.type.string.go
#                 ^ source.go punctuation.definition.begin.bracket.curly.go
#                  ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                   ^^^ source.go string.quoted.double.go
#                      ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                       ^ source.go punctuation.other.comma.go
#                        ^ source.go
#                         ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                          ^^^ source.go string.quoted.double.go
#                             ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                              ^ source.go punctuation.definition.end.bracket.curly.go
>
>	f := &Foo17{
#^ source.go
# ^ source.go variable.other.assignment.go
#  ^ source.go
#   ^^ source.go keyword.operator.assignment.go
#     ^ source.go
#      ^ source.go keyword.operator.address.go
#       ^^^^^ source.go entity.name.type.go
#            ^ source.go punctuation.definition.begin.bracket.curly.go
>		name: "foo",
#^^ source.go
#  ^^^^ source.go variable.other.go
#      ^ source.go punctuation.other.colon.go
#       ^ source.go
#        ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#         ^^^ source.go string.quoted.double.go
#            ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#             ^ source.go punctuation.other.comma.go
>		age:  28}
#^^ source.go
#  ^^^ source.go variable.other.go
#     ^ source.go punctuation.other.colon.go
#      ^^ source.go
#        ^^ source.go constant.numeric.decimal.go
#          ^ source.go punctuation.definition.end.bracket.curly.go
>	f2 := Foo17{name: "foo", age: 28}
#^ source.go
# ^^ source.go variable.other.assignment.go
#   ^ source.go
#    ^^ source.go keyword.operator.assignment.go
#      ^ source.go
#       ^^^^^ source.go entity.name.type.go
#            ^ source.go punctuation.definition.begin.bracket.curly.go
#             ^^^^ source.go variable.other.go
#                 ^ source.go punctuation.other.colon.go
#                  ^ source.go
#                   ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                    ^^^ source.go string.quoted.double.go
#                       ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                        ^ source.go punctuation.other.comma.go
#                         ^ source.go
#                          ^^^ source.go variable.other.go
#                             ^ source.go punctuation.other.colon.go
#                              ^ source.go
#                               ^^ source.go constant.numeric.decimal.go
#                                 ^ source.go punctuation.definition.end.bracket.curly.go
>
>	whatAmI(true)
#^ source.go
# ^^^^^^^ source.go entity.name.function.support.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^^^^ source.go constant.language.go
#             ^ source.go punctuation.definition.end.bracket.round.go
>	whatAmI(3222)
#^ source.go
# ^^^^^^^ source.go entity.name.function.support.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^^^^ source.go constant.numeric.decimal.go
#             ^ source.go punctuation.definition.end.bracket.round.go
>	whatAmI(foo)
#^ source.go
# ^^^^^^^ source.go entity.name.function.support.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^^^ source.go variable.other.go
#            ^ source.go punctuation.definition.end.bracket.round.go
>	whatAmI(bar)
#^ source.go
# ^^^^^^^ source.go entity.name.function.support.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^^^ source.go variable.other.go
#            ^ source.go punctuation.definition.end.bracket.round.go
>	whatAmI("hello world!")
#^ source.go
# ^^^^^^^ source.go entity.name.function.support.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#          ^^^^^^^^^^^^ source.go string.quoted.double.go
#                      ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                       ^ source.go punctuation.definition.end.bracket.round.go
>	whatAmI(f2)
#^ source.go
# ^^^^^^^ source.go entity.name.function.support.go
#        ^ source.go punctuation.definition.begin.bracket.round.go
#         ^^ source.go variable.other.go
#           ^ source.go punctuation.definition.end.bracket.round.go
>
>	foo2 := func(a string) {
#^ source.go
# ^^^^ source.go variable.other.assignment.go
#     ^ source.go
#      ^^ source.go keyword.operator.assignment.go
#        ^ source.go
#         ^^^^ source.go keyword.function.go
#             ^ source.go punctuation.definition.begin.bracket.round.go
#              ^ source.go variable.other.go
#               ^ source.go
#                ^^^^^^ source.go storage.type.string.go
#                      ^ source.go punctuation.definition.end.bracket.round.go
#                       ^ source.go
#                        ^ source.go punctuation.definition.begin.bracket.curly.go
>		fmt.Println(a)
#^^ source.go
#  ^^^ source.go variable.other.go
#     ^ source.go punctuation.other.period.go
#      ^^^^^^^ source.go entity.name.function.support.go
#             ^ source.go punctuation.definition.begin.bracket.round.go
#              ^ source.go variable.other.go
#               ^ source.go punctuation.definition.end.bracket.round.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	foo2(foo)
#^ source.go
# ^^^^ source.go entity.name.function.support.go
#     ^ source.go punctuation.definition.begin.bracket.round.go
#      ^^^ source.go variable.other.go
#         ^ source.go punctuation.definition.end.bracket.round.go
>
>	fmt.Println(f)
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go punctuation.other.period.go
#     ^^^^^^^ source.go entity.name.function.support.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go variable.other.go
#              ^ source.go punctuation.definition.end.bracket.round.go
>	fmt.Println(f2)
#^ source.go
# ^^^ source.go variable.other.go
#    ^ source.go punctuation.other.period.go
#     ^^^^^^^ source.go entity.name.function.support.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^^ source.go variable.other.go
#               ^ source.go punctuation.definition.end.bracket.round.go
>
>	for _, i := range data {
#^ source.go
# ^^^ source.go keyword.control.go
#    ^ source.go
#     ^ source.go variable.other.assignment.go
#      ^ source.go punctuation.other.comma.go
#       ^ source.go
#        ^ source.go variable.other.assignment.go
#         ^ source.go
#          ^^ source.go keyword.operator.assignment.go
#            ^ source.go
#             ^^^^^ source.go keyword.control.go
#                  ^^^^^^ source.go variable.other.go
#                        ^ source.go punctuation.definition.begin.bracket.curly.go
>		log.Printf("your data is %s", i)
#^^ source.go
#  ^^^ source.go variable.other.go
#     ^ source.go punctuation.other.period.go
#      ^^^^^^ source.go entity.name.function.support.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#              ^^^^^^^^^^^^^ source.go string.quoted.double.go
#                           ^^ source.go string.quoted.double.go constant.other.placeholder.go
#                             ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                              ^ source.go punctuation.other.comma.go
#                               ^ source.go
#                                ^ source.go variable.other.go
#                                 ^ source.go punctuation.definition.end.bracket.round.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	for i := 0; i <= 10; i++ {
#^ source.go
# ^^^ source.go keyword.control.go
#    ^ source.go
#     ^ source.go variable.other.assignment.go
#      ^ source.go
#       ^^ source.go keyword.operator.assignment.go
#         ^ source.go
#          ^ source.go constant.numeric.decimal.go
#           ^ source.go punctuation.terminator.go
#            ^ source.go
#             ^ source.go variable.other.go
#              ^ source.go
#               ^^ source.go keyword.operator.comparison.go
#                 ^ source.go
#                  ^^ source.go constant.numeric.decimal.go
#                    ^ source.go punctuation.terminator.go
#                     ^ source.go
#                      ^ source.go variable.other.go
#                       ^^ source.go keyword.operator.increment.go
#                         ^ source.go
#                          ^ source.go punctuation.definition.begin.bracket.curly.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	var i context.Context
#^ source.go
# ^^^ source.go keyword.var.go
#    ^ source.go
#     ^ source.go variable.other.assignment.go
#      ^ source.go
#       ^^^^^^^ source.go entity.name.type.go
#              ^ source.go punctuation.other.period.go
#               ^^^^^^^^ source.go entity.name.type.go
>	defer func(i context.Context) {
#^ source.go
# ^^^^^ source.go keyword.control.go
#      ^ source.go
#       ^^^^ source.go keyword.function.go
#           ^ source.go punctuation.definition.begin.bracket.round.go
#            ^ source.go variable.other.go
#             ^ source.go
#              ^^^^^^^ source.go entity.name.type.go
#                     ^ source.go punctuation.other.period.go
#                      ^^^^^^^ source.go entity.name.type.go
#                             ^ source.go punctuation.definition.end.bracket.round.go
#                              ^ source.go
#                               ^ source.go punctuation.definition.begin.bracket.curly.go
>		if recover() == nil {
#^^ source.go
#  ^^ source.go keyword.control.go
#    ^ source.go
#     ^^^^^^^ source.go entity.name.function.support.builtin.go
#            ^ source.go punctuation.definition.begin.bracket.round.go
#             ^ source.go punctuation.definition.end.bracket.round.go
#              ^ source.go
#               ^^ source.go keyword.operator.comparison.go
#                 ^ source.go
#                  ^^^ source.go constant.language.go
#                     ^ source.go
#                      ^ source.go punctuation.definition.begin.bracket.curly.go
>			fmt.Println("expected panic()")
#^^^ source.go
#   ^^^ source.go variable.other.go
#      ^ source.go punctuation.other.period.go
#       ^^^^^^^ source.go entity.name.function.support.go
#              ^ source.go punctuation.definition.begin.bracket.round.go
#               ^ source.go string.quoted.double.go punctuation.definition.string.begin.go
#                ^^^^^^^^^^^^^^^^ source.go string.quoted.double.go
#                                ^ source.go string.quoted.double.go punctuation.definition.string.end.go
#                                 ^ source.go punctuation.definition.end.bracket.round.go
>		}
#^^ source.go
#  ^ source.go punctuation.definition.end.bracket.curly.go
>	}(i)
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
#  ^ source.go punctuation.definition.begin.bracket.round.go
#   ^ source.go variable.other.go
#    ^ source.go punctuation.definition.end.bracket.round.go
>
>	mw := func(next http.Handler) http.Handler {
#^ source.go
# ^^ source.go variable.other.assignment.go
#   ^ source.go
#    ^^ source.go keyword.operator.assignment.go
#      ^ source.go
#       ^^^^ source.go keyword.function.go
#           ^ source.go punctuation.definition.begin.bracket.round.go
#            ^^^^ source.go variable.other.go
#                ^ source.go
#                 ^^^^ source.go entity.name.type.go
#                     ^ source.go punctuation.other.period.go
#                      ^^^^^^^ source.go entity.name.type.go
#                             ^ source.go punctuation.definition.end.bracket.round.go
#                              ^ source.go
#                               ^^^^ source.go entity.name.type.go
#                                   ^ source.go punctuation.other.period.go
#                                    ^^^^^^^ source.go entity.name.type.go
#                                           ^ source.go
#                                            ^ source.go punctuation.definition.begin.bracket.curly.go
>		return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
#^^ source.go
#  ^^^^^^ source.go keyword.control.go
#        ^ source.go
#         ^^^^ source.go variable.other.go
#             ^ source.go punctuation.other.period.go
#              ^^^^^^^^^^^ source.go entity.name.function.support.go
#                         ^ source.go punctuation.definition.begin.bracket.round.go
#                          ^^^^ source.go keyword.function.go
#                              ^ source.go punctuation.definition.begin.bracket.round.go
#                               ^ source.go variable.other.go
#                                ^ source.go
#                                 ^^^^ source.go entity.name.type.go
#                                     ^ source.go punctuation.other.period.go
#                                      ^^^^^^^^^^^^^^ source.go entity.name.type.go
#                                                    ^ source.go punctuation.other.comma.go
#                                                     ^ source.go
#                                                      ^ source.go variable.other.go
#                                                       ^ source.go
#                                                        ^ source.go keyword.operator.address.go
#                                                         ^^^^ source.go entity.name.type.go
#                                                             ^ source.go punctuation.other.period.go
#                                                              ^^^^^^^ source.go entity.name.type.go
#                                                                     ^ source.go punctuation.definition.end.bracket.round.go
#                                                                      ^ source.go
#                                                                       ^ source.go punctuation.definition.begin.bracket.curly.go
>			next.ServeHTTP(w, r)
#^^^ source.go
#   ^^^^ source.go variable.other.go
#       ^ source.go punctuation.other.period.go
#        ^^^^^^^^^ source.go entity.name.function.support.go
#                 ^ source.go punctuation.definition.begin.bracket.round.go
#                  ^ source.go variable.other.go
#                   ^ source.go punctuation.other.comma.go
#                    ^ source.go
#                     ^ source.go variable.other.go
#                      ^ source.go punctuation.definition.end.bracket.round.go
>		})
#^^ source.go
#  ^ source.go punctuation.definition.end.bracket.curly.go
#   ^ source.go punctuation.definition.end.bracket.round.go
>	}
#^ source.go
# ^ source.go punctuation.definition.end.bracket.curly.go
>	var m http.Handler
#^ source.go
# ^^^ source.go keyword.var.go
#    ^ source.go
#     ^ source.go variable.other.assignment.go
#      ^ source.go
#       ^^^^ source.go entity.name.type.go
#           ^ source.go punctuation.other.period.go
#            ^^^^^^^^ source.go entity.name.type.go
>	mw(m)
#^ source.go
# ^^ source.go entity.name.function.support.go
#   ^ source.go punctuation.definition.begin.bracket.round.go
#    ^ source.go variable.other.go
#     ^ source.go punctuation.definition.end.bracket.round.go
>
>}
#^ source.go punctuation.definition.end.bracket.curly.go
>